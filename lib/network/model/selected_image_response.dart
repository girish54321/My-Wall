///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class SelectedImageResponseRelatedCollectionsResultsPreviewPhotosUrls {
/*
{
  "raw": "https://images.unsplash.com/photo-1700605149722-50c0d7fe003d?ixlib=rb-4.0.3",
  "full": "https://images.unsplash.com/photo-1700605149722-50c0d7fe003d?ixlib=rb-4.0.3&q=85&fm=jpg&crop=entropy&cs=srgb",
  "regular": "https://images.unsplash.com/photo-1700605149722-50c0d7fe003d?ixlib=rb-4.0.3&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max",
  "small": "https://images.unsplash.com/photo-1700605149722-50c0d7fe003d?ixlib=rb-4.0.3&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=400&fit=max",
  "thumb": "https://images.unsplash.com/photo-1700605149722-50c0d7fe003d?ixlib=rb-4.0.3&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=200&fit=max",
  "small_s3": "https://s3.us-west-2.amazonaws.com/images.unsplash.com/small/photo-1700605149722-50c0d7fe003d"
} 
*/

  String? raw;
  String? full;
  String? regular;
  String? small;
  String? thumb;
  String? smallS3;
  Map<String, dynamic> __origJson = {};

  SelectedImageResponseRelatedCollectionsResultsPreviewPhotosUrls({
    this.raw,
    this.full,
    this.regular,
    this.small,
    this.thumb,
    this.smallS3,
  });
  SelectedImageResponseRelatedCollectionsResultsPreviewPhotosUrls.fromJson(
      Map<String, dynamic> json) {
    __origJson = json;
    raw = json['raw']?.toString();
    full = json['full']?.toString();
    regular = json['regular']?.toString();
    small = json['small']?.toString();
    thumb = json['thumb']?.toString();
    smallS3 = json['small_s3']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['raw'] = raw;
    data['full'] = full;
    data['regular'] = regular;
    data['small'] = small;
    data['thumb'] = thumb;
    data['small_s3'] = smallS3;
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}

class SelectedImageResponseRelatedCollectionsResultsPreviewPhotos {
/*
{
  "id": "GVpDJvR9wGI",
  "slug": "a-woman-with-long-hair-and-red-glasses-GVpDJvR9wGI",
  "created_at": "2023-11-21T22:19:30Z",
  "updated_at": "2023-12-08T00:24:06Z",
  "blur_hash": "LF7wZ+j[0eae?GfR9aayNHWVs:of",
  "urls": {
    "raw": "https://images.unsplash.com/photo-1700605149722-50c0d7fe003d?ixlib=rb-4.0.3",
    "full": "https://images.unsplash.com/photo-1700605149722-50c0d7fe003d?ixlib=rb-4.0.3&q=85&fm=jpg&crop=entropy&cs=srgb",
    "regular": "https://images.unsplash.com/photo-1700605149722-50c0d7fe003d?ixlib=rb-4.0.3&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max",
    "small": "https://images.unsplash.com/photo-1700605149722-50c0d7fe003d?ixlib=rb-4.0.3&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=400&fit=max",
    "thumb": "https://images.unsplash.com/photo-1700605149722-50c0d7fe003d?ixlib=rb-4.0.3&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=200&fit=max",
    "small_s3": "https://s3.us-west-2.amazonaws.com/images.unsplash.com/small/photo-1700605149722-50c0d7fe003d"
  }
} 
*/

  String? id;
  String? slug;
  String? createdAt;
  String? updatedAt;
  String? blurHash;
  SelectedImageResponseRelatedCollectionsResultsPreviewPhotosUrls? urls;
  Map<String, dynamic> __origJson = {};

  SelectedImageResponseRelatedCollectionsResultsPreviewPhotos({
    this.id,
    this.slug,
    this.createdAt,
    this.updatedAt,
    this.blurHash,
    this.urls,
  });
  SelectedImageResponseRelatedCollectionsResultsPreviewPhotos.fromJson(
      Map<String, dynamic> json) {
    __origJson = json;
    id = json['id']?.toString();
    slug = json['slug']?.toString();
    createdAt = json['created_at']?.toString();
    updatedAt = json['updated_at']?.toString();
    blurHash = json['blur_hash']?.toString();
    urls = (json['urls'] != null)
        ? SelectedImageResponseRelatedCollectionsResultsPreviewPhotosUrls
            .fromJson(json['urls'])
        : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['slug'] = slug;
    data['created_at'] = createdAt;
    data['updated_at'] = updatedAt;
    data['blur_hash'] = blurHash;
    if (urls != null) {
      data['urls'] = urls!.toJson();
    }
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}

class SelectedImageResponseRelatedCollectionsResultsCoverPhotoUserSocial {
/*
{
  "instagram_username": "null",
  "portfolio_url": "null",
  "twitter_username": "null",
  "paypal_email": "null"
} 
*/

  String? instagramUsername;
  String? portfolioUrl;
  String? twitterUsername;
  String? paypalEmail;
  Map<String, dynamic> __origJson = {};

  SelectedImageResponseRelatedCollectionsResultsCoverPhotoUserSocial({
    this.instagramUsername,
    this.portfolioUrl,
    this.twitterUsername,
    this.paypalEmail,
  });
  SelectedImageResponseRelatedCollectionsResultsCoverPhotoUserSocial.fromJson(
      Map<String, dynamic> json) {
    __origJson = json;
    instagramUsername = json['instagram_username']?.toString();
    portfolioUrl = json['portfolio_url']?.toString();
    twitterUsername = json['twitter_username']?.toString();
    paypalEmail = json['paypal_email']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['instagram_username'] = instagramUsername;
    data['portfolio_url'] = portfolioUrl;
    data['twitter_username'] = twitterUsername;
    data['paypal_email'] = paypalEmail;
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}

class SelectedImageResponseRelatedCollectionsResultsCoverPhotoUserProfileImage {
/*
{
  "small": "https://images.unsplash.com/profile-1670961867620-30bf72c02888?ixlib=rb-4.0.3&crop=faces&fit=crop&w=32&h=32",
  "medium": "https://images.unsplash.com/profile-1670961867620-30bf72c02888?ixlib=rb-4.0.3&crop=faces&fit=crop&w=64&h=64",
  "large": "https://images.unsplash.com/profile-1670961867620-30bf72c02888?ixlib=rb-4.0.3&crop=faces&fit=crop&w=128&h=128"
} 
*/

  String? small;
  String? medium;
  String? large;
  Map<String, dynamic> __origJson = {};

  SelectedImageResponseRelatedCollectionsResultsCoverPhotoUserProfileImage({
    this.small,
    this.medium,
    this.large,
  });
  SelectedImageResponseRelatedCollectionsResultsCoverPhotoUserProfileImage.fromJson(
      Map<String, dynamic> json) {
    __origJson = json;
    small = json['small']?.toString();
    medium = json['medium']?.toString();
    large = json['large']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['small'] = small;
    data['medium'] = medium;
    data['large'] = large;
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}

class SelectedImageResponseRelatedCollectionsResultsCoverPhotoUserLinks {
/*
{
  "self": "https://api.unsplash.com/users/ylvlso",
  "html": "https://unsplash.com/@ylvlso",
  "photos": "https://api.unsplash.com/users/ylvlso/photos",
  "likes": "https://api.unsplash.com/users/ylvlso/likes",
  "portfolio": "https://api.unsplash.com/users/ylvlso/portfolio",
  "following": "https://api.unsplash.com/users/ylvlso/following",
  "followers": "https://api.unsplash.com/users/ylvlso/followers"
} 
*/

  String? self;
  String? html;
  String? photos;
  String? likes;
  String? portfolio;
  String? following;
  String? followers;
  Map<String, dynamic> __origJson = {};

  SelectedImageResponseRelatedCollectionsResultsCoverPhotoUserLinks({
    this.self,
    this.html,
    this.photos,
    this.likes,
    this.portfolio,
    this.following,
    this.followers,
  });
  SelectedImageResponseRelatedCollectionsResultsCoverPhotoUserLinks.fromJson(
      Map<String, dynamic> json) {
    __origJson = json;
    self = json['self']?.toString();
    html = json['html']?.toString();
    photos = json['photos']?.toString();
    likes = json['likes']?.toString();
    portfolio = json['portfolio']?.toString();
    following = json['following']?.toString();
    followers = json['followers']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['self'] = self;
    data['html'] = html;
    data['photos'] = photos;
    data['likes'] = likes;
    data['portfolio'] = portfolio;
    data['following'] = following;
    data['followers'] = followers;
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}

class SelectedImageResponseRelatedCollectionsResultsCoverPhotoUser {
/*
{
  "id": "XhDgsEZoUlA",
  "updated_at": "2023-12-06T01:22:29Z",
  "username": "ylvlso",
  "name": "uliana soboleva",
  "first_name": "uliana",
  "last_name": "soboleva",
  "twitter_username": "null",
  "portfolio_url": "null",
  "bio": "null",
  "location": "null",
  "links": {
    "self": "https://api.unsplash.com/users/ylvlso",
    "html": "https://unsplash.com/@ylvlso",
    "photos": "https://api.unsplash.com/users/ylvlso/photos",
    "likes": "https://api.unsplash.com/users/ylvlso/likes",
    "portfolio": "https://api.unsplash.com/users/ylvlso/portfolio",
    "following": "https://api.unsplash.com/users/ylvlso/following",
    "followers": "https://api.unsplash.com/users/ylvlso/followers"
  },
  "profile_image": {
    "small": "https://images.unsplash.com/profile-1670961867620-30bf72c02888?ixlib=rb-4.0.3&crop=faces&fit=crop&w=32&h=32",
    "medium": "https://images.unsplash.com/profile-1670961867620-30bf72c02888?ixlib=rb-4.0.3&crop=faces&fit=crop&w=64&h=64",
    "large": "https://images.unsplash.com/profile-1670961867620-30bf72c02888?ixlib=rb-4.0.3&crop=faces&fit=crop&w=128&h=128"
  },
  "instagram_username": "null",
  "total_collections": 0,
  "total_likes": 39,
  "total_photos": 68,
  "total_promoted_photos": 5,
  "accepted_tos": true,
  "for_hire": false,
  "social": {
    "instagram_username": "null",
    "portfolio_url": "null",
    "twitter_username": "null",
    "paypal_email": "null"
  }
} 
*/

  String? id;
  String? updatedAt;
  String? username;
  String? name;
  String? firstName;
  String? lastName;
  String? twitterUsername;
  String? portfolioUrl;
  String? bio;
  String? location;
  SelectedImageResponseRelatedCollectionsResultsCoverPhotoUserLinks? links;
  SelectedImageResponseRelatedCollectionsResultsCoverPhotoUserProfileImage?
      profileImage;
  String? instagramUsername;
  int? totalCollections;
  int? totalLikes;
  int? totalPhotos;
  int? totalPromotedPhotos;
  bool? acceptedTos;
  bool? forHire;
  SelectedImageResponseRelatedCollectionsResultsCoverPhotoUserSocial? social;
  Map<String, dynamic> __origJson = {};

  SelectedImageResponseRelatedCollectionsResultsCoverPhotoUser({
    this.id,
    this.updatedAt,
    this.username,
    this.name,
    this.firstName,
    this.lastName,
    this.twitterUsername,
    this.portfolioUrl,
    this.bio,
    this.location,
    this.links,
    this.profileImage,
    this.instagramUsername,
    this.totalCollections,
    this.totalLikes,
    this.totalPhotos,
    this.totalPromotedPhotos,
    this.acceptedTos,
    this.forHire,
    this.social,
  });
  SelectedImageResponseRelatedCollectionsResultsCoverPhotoUser.fromJson(
      Map<String, dynamic> json) {
    __origJson = json;
    id = json['id']?.toString();
    updatedAt = json['updated_at']?.toString();
    username = json['username']?.toString();
    name = json['name']?.toString();
    firstName = json['first_name']?.toString();
    lastName = json['last_name']?.toString();
    twitterUsername = json['twitter_username']?.toString();
    portfolioUrl = json['portfolio_url']?.toString();
    bio = json['bio']?.toString();
    location = json['location']?.toString();
    links = (json['links'] != null)
        ? SelectedImageResponseRelatedCollectionsResultsCoverPhotoUserLinks
            .fromJson(json['links'])
        : null;
    profileImage = (json['profile_image'] != null)
        ? SelectedImageResponseRelatedCollectionsResultsCoverPhotoUserProfileImage
            .fromJson(json['profile_image'])
        : null;
    instagramUsername = json['instagram_username']?.toString();
    totalCollections = json['total_collections']?.toInt();
    totalLikes = json['total_likes']?.toInt();
    totalPhotos = json['total_photos']?.toInt();
    totalPromotedPhotos = json['total_promoted_photos']?.toInt();
    acceptedTos = json['accepted_tos'];
    forHire = json['for_hire'];
    social = (json['social'] != null)
        ? SelectedImageResponseRelatedCollectionsResultsCoverPhotoUserSocial
            .fromJson(json['social'])
        : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['updated_at'] = updatedAt;
    data['username'] = username;
    data['name'] = name;
    data['first_name'] = firstName;
    data['last_name'] = lastName;
    data['twitter_username'] = twitterUsername;
    data['portfolio_url'] = portfolioUrl;
    data['bio'] = bio;
    data['location'] = location;
    if (links != null) {
      data['links'] = links!.toJson();
    }
    if (profileImage != null) {
      data['profile_image'] = profileImage!.toJson();
    }
    data['instagram_username'] = instagramUsername;
    data['total_collections'] = totalCollections;
    data['total_likes'] = totalLikes;
    data['total_photos'] = totalPhotos;
    data['total_promoted_photos'] = totalPromotedPhotos;
    data['accepted_tos'] = acceptedTos;
    data['for_hire'] = forHire;
    if (social != null) {
      data['social'] = social!.toJson();
    }
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}

class SelectedImageResponseRelatedCollectionsResultsCoverPhotoTopicSubmissionsFashionBeauty {
/*
{
  "status": "approved",
  "approved_on": "2023-11-24T10:20:55Z"
} 
*/

  String? status;
  String? approvedOn;
  Map<String, dynamic> __origJson = {};

  SelectedImageResponseRelatedCollectionsResultsCoverPhotoTopicSubmissionsFashionBeauty({
    this.status,
    this.approvedOn,
  });
  SelectedImageResponseRelatedCollectionsResultsCoverPhotoTopicSubmissionsFashionBeauty.fromJson(
      Map<String, dynamic> json) {
    __origJson = json;
    status = json['status']?.toString();
    approvedOn = json['approved_on']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['status'] = status;
    data['approved_on'] = approvedOn;
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}

class SelectedImageResponseRelatedCollectionsResultsCoverPhotoTopicSubmissions {
/*
{
  "fashion-beauty": {
    "status": "approved",
    "approved_on": "2023-11-24T10:20:55Z"
  }
} 
*/

  SelectedImageResponseRelatedCollectionsResultsCoverPhotoTopicSubmissionsFashionBeauty?
      fashionBeauty;
  Map<String, dynamic> __origJson = {};

  SelectedImageResponseRelatedCollectionsResultsCoverPhotoTopicSubmissions({
    this.fashionBeauty,
  });
  SelectedImageResponseRelatedCollectionsResultsCoverPhotoTopicSubmissions.fromJson(
      Map<String, dynamic> json) {
    __origJson = json;
    fashionBeauty = (json['fashion-beauty'] != null)
        ? SelectedImageResponseRelatedCollectionsResultsCoverPhotoTopicSubmissionsFashionBeauty
            .fromJson(json['fashion-beauty'])
        : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (fashionBeauty != null) {
      data['fashion-beauty'] = fashionBeauty!.toJson();
    }
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}

class SelectedImageResponseRelatedCollectionsResultsCoverPhotoLinks {
/*
{
  "self": "https://api.unsplash.com/photos/a-woman-with-long-hair-and-red-glasses-GVpDJvR9wGI",
  "html": "https://unsplash.com/photos/a-woman-with-long-hair-and-red-glasses-GVpDJvR9wGI",
  "download": "https://unsplash.com/photos/GVpDJvR9wGI/download",
  "download_location": "https://api.unsplash.com/photos/GVpDJvR9wGI/download"
} 
*/

  String? self;
  String? html;
  String? download;
  String? downloadLocation;
  Map<String, dynamic> __origJson = {};

  SelectedImageResponseRelatedCollectionsResultsCoverPhotoLinks({
    this.self,
    this.html,
    this.download,
    this.downloadLocation,
  });
  SelectedImageResponseRelatedCollectionsResultsCoverPhotoLinks.fromJson(
      Map<String, dynamic> json) {
    __origJson = json;
    self = json['self']?.toString();
    html = json['html']?.toString();
    download = json['download']?.toString();
    downloadLocation = json['download_location']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['self'] = self;
    data['html'] = html;
    data['download'] = download;
    data['download_location'] = downloadLocation;
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}

class SelectedImageResponseRelatedCollectionsResultsCoverPhotoUrls {
/*
{
  "raw": "https://images.unsplash.com/photo-1700605149722-50c0d7fe003d?ixlib=rb-4.0.3",
  "full": "https://images.unsplash.com/photo-1700605149722-50c0d7fe003d?ixlib=rb-4.0.3&q=85&fm=jpg&crop=entropy&cs=srgb",
  "regular": "https://images.unsplash.com/photo-1700605149722-50c0d7fe003d?ixlib=rb-4.0.3&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max",
  "small": "https://images.unsplash.com/photo-1700605149722-50c0d7fe003d?ixlib=rb-4.0.3&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=400&fit=max",
  "thumb": "https://images.unsplash.com/photo-1700605149722-50c0d7fe003d?ixlib=rb-4.0.3&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=200&fit=max",
  "small_s3": "https://s3.us-west-2.amazonaws.com/images.unsplash.com/small/photo-1700605149722-50c0d7fe003d"
} 
*/

  String? raw;
  String? full;
  String? regular;
  String? small;
  String? thumb;
  String? smallS3;
  Map<String, dynamic> __origJson = {};

  SelectedImageResponseRelatedCollectionsResultsCoverPhotoUrls({
    this.raw,
    this.full,
    this.regular,
    this.small,
    this.thumb,
    this.smallS3,
  });
  SelectedImageResponseRelatedCollectionsResultsCoverPhotoUrls.fromJson(
      Map<String, dynamic> json) {
    __origJson = json;
    raw = json['raw']?.toString();
    full = json['full']?.toString();
    regular = json['regular']?.toString();
    small = json['small']?.toString();
    thumb = json['thumb']?.toString();
    smallS3 = json['small_s3']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['raw'] = raw;
    data['full'] = full;
    data['regular'] = regular;
    data['small'] = small;
    data['thumb'] = thumb;
    data['small_s3'] = smallS3;
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}

class SelectedImageResponseRelatedCollectionsResultsCoverPhoto {
/*
{
  "id": "GVpDJvR9wGI",
  "slug": "a-woman-with-long-hair-and-red-glasses-GVpDJvR9wGI",
  "created_at": "2023-11-21T22:19:30Z",
  "updated_at": "2023-12-08T00:24:06Z",
  "promoted_at": "2023-11-24T07:48:01Z",
  "width": 4160,
  "height": 5824,
  "color": "#260c0c",
  "blur_hash": "LF7wZ+j[0eae?GfR9aayNHWVs:of",
  "description": "null",
  "alt_description": "a woman with long hair and red glasses",
  "breadcrumbs": [
    ""
  ],
  "urls": {
    "raw": "https://images.unsplash.com/photo-1700605149722-50c0d7fe003d?ixlib=rb-4.0.3",
    "full": "https://images.unsplash.com/photo-1700605149722-50c0d7fe003d?ixlib=rb-4.0.3&q=85&fm=jpg&crop=entropy&cs=srgb",
    "regular": "https://images.unsplash.com/photo-1700605149722-50c0d7fe003d?ixlib=rb-4.0.3&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max",
    "small": "https://images.unsplash.com/photo-1700605149722-50c0d7fe003d?ixlib=rb-4.0.3&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=400&fit=max",
    "thumb": "https://images.unsplash.com/photo-1700605149722-50c0d7fe003d?ixlib=rb-4.0.3&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=200&fit=max",
    "small_s3": "https://s3.us-west-2.amazonaws.com/images.unsplash.com/small/photo-1700605149722-50c0d7fe003d"
  },
  "links": {
    "self": "https://api.unsplash.com/photos/a-woman-with-long-hair-and-red-glasses-GVpDJvR9wGI",
    "html": "https://unsplash.com/photos/a-woman-with-long-hair-and-red-glasses-GVpDJvR9wGI",
    "download": "https://unsplash.com/photos/GVpDJvR9wGI/download",
    "download_location": "https://api.unsplash.com/photos/GVpDJvR9wGI/download"
  },
  "likes": 84,
  "liked_by_user": false,
  "current_user_collections": [
    ""
  ],
  "sponsorship": "null",
  "topic_submissions": {
    "fashion-beauty": {
      "status": "approved",
      "approved_on": "2023-11-24T10:20:55Z"
    }
  },
  "user": {
    "id": "XhDgsEZoUlA",
    "updated_at": "2023-12-06T01:22:29Z",
    "username": "ylvlso",
    "name": "uliana soboleva",
    "first_name": "uliana",
    "last_name": "soboleva",
    "twitter_username": "null",
    "portfolio_url": "null",
    "bio": "null",
    "location": "null",
    "links": {
      "self": "https://api.unsplash.com/users/ylvlso",
      "html": "https://unsplash.com/@ylvlso",
      "photos": "https://api.unsplash.com/users/ylvlso/photos",
      "likes": "https://api.unsplash.com/users/ylvlso/likes",
      "portfolio": "https://api.unsplash.com/users/ylvlso/portfolio",
      "following": "https://api.unsplash.com/users/ylvlso/following",
      "followers": "https://api.unsplash.com/users/ylvlso/followers"
    },
    "profile_image": {
      "small": "https://images.unsplash.com/profile-1670961867620-30bf72c02888?ixlib=rb-4.0.3&crop=faces&fit=crop&w=32&h=32",
      "medium": "https://images.unsplash.com/profile-1670961867620-30bf72c02888?ixlib=rb-4.0.3&crop=faces&fit=crop&w=64&h=64",
      "large": "https://images.unsplash.com/profile-1670961867620-30bf72c02888?ixlib=rb-4.0.3&crop=faces&fit=crop&w=128&h=128"
    },
    "instagram_username": "null",
    "total_collections": 0,
    "total_likes": 39,
    "total_photos": 68,
    "total_promoted_photos": 5,
    "accepted_tos": true,
    "for_hire": false,
    "social": {
      "instagram_username": "null",
      "portfolio_url": "null",
      "twitter_username": "null",
      "paypal_email": "null"
    }
  }
} 
*/

  String? id;
  String? slug;
  String? createdAt;
  String? updatedAt;
  String? promotedAt;
  int? width;
  int? height;
  String? color;
  String? blurHash;
  String? description;
  String? altDescription;
  List<String?>? breadcrumbs;
  SelectedImageResponseRelatedCollectionsResultsCoverPhotoUrls? urls;
  SelectedImageResponseRelatedCollectionsResultsCoverPhotoLinks? links;
  int? likes;
  bool? likedByUser;
  List<String?>? currentUserCollections;
  String? sponsorship;
  SelectedImageResponseRelatedCollectionsResultsCoverPhotoTopicSubmissions?
      topicSubmissions;
  SelectedImageResponseRelatedCollectionsResultsCoverPhotoUser? user;
  Map<String, dynamic> __origJson = {};

  SelectedImageResponseRelatedCollectionsResultsCoverPhoto({
    this.id,
    this.slug,
    this.createdAt,
    this.updatedAt,
    this.promotedAt,
    this.width,
    this.height,
    this.color,
    this.blurHash,
    this.description,
    this.altDescription,
    this.breadcrumbs,
    this.urls,
    this.links,
    this.likes,
    this.likedByUser,
    this.currentUserCollections,
    this.sponsorship,
    this.topicSubmissions,
    this.user,
  });
  SelectedImageResponseRelatedCollectionsResultsCoverPhoto.fromJson(
      Map<String, dynamic> json) {
    __origJson = json;
    id = json['id']?.toString();
    slug = json['slug']?.toString();
    createdAt = json['created_at']?.toString();
    updatedAt = json['updated_at']?.toString();
    promotedAt = json['promoted_at']?.toString();
    width = json['width']?.toInt();
    height = json['height']?.toInt();
    color = json['color']?.toString();
    blurHash = json['blur_hash']?.toString();
    description = json['description']?.toString();
    altDescription = json['alt_description']?.toString();
    if (json['breadcrumbs'] != null) {
      final v = json['breadcrumbs'];
      final arr0 = <String>[];
      v.forEach((v) {
        arr0.add(v.toString());
      });
      breadcrumbs = arr0;
    }
    urls = (json['urls'] != null)
        ? SelectedImageResponseRelatedCollectionsResultsCoverPhotoUrls.fromJson(
            json['urls'])
        : null;
    links = (json['links'] != null)
        ? SelectedImageResponseRelatedCollectionsResultsCoverPhotoLinks
            .fromJson(json['links'])
        : null;
    likes = json['likes']?.toInt();
    likedByUser = json['liked_by_user'];
    if (json['current_user_collections'] != null) {
      final v = json['current_user_collections'];
      final arr0 = <String>[];
      v.forEach((v) {
        arr0.add(v.toString());
      });
      currentUserCollections = arr0;
    }
    sponsorship = json['sponsorship']?.toString();
    topicSubmissions = (json['topic_submissions'] != null)
        ? SelectedImageResponseRelatedCollectionsResultsCoverPhotoTopicSubmissions
            .fromJson(json['topic_submissions'])
        : null;
    user = (json['user'] != null)
        ? SelectedImageResponseRelatedCollectionsResultsCoverPhotoUser.fromJson(
            json['user'])
        : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['slug'] = slug;
    data['created_at'] = createdAt;
    data['updated_at'] = updatedAt;
    data['promoted_at'] = promotedAt;
    data['width'] = width;
    data['height'] = height;
    data['color'] = color;
    data['blur_hash'] = blurHash;
    data['description'] = description;
    data['alt_description'] = altDescription;
    if (breadcrumbs != null) {
      final v = breadcrumbs;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['breadcrumbs'] = arr0;
    }
    if (urls != null) {
      data['urls'] = urls!.toJson();
    }
    if (links != null) {
      data['links'] = links!.toJson();
    }
    data['likes'] = likes;
    data['liked_by_user'] = likedByUser;
    if (currentUserCollections != null) {
      final v = currentUserCollections;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['current_user_collections'] = arr0;
    }
    data['sponsorship'] = sponsorship;
    if (topicSubmissions != null) {
      data['topic_submissions'] = topicSubmissions!.toJson();
    }
    if (user != null) {
      data['user'] = user!.toJson();
    }
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}

class SelectedImageResponseRelatedCollectionsResultsUserSocial {
/*
{
  "instagram_username": "null",
  "portfolio_url": "https://linktr.ee/scept3rdoesstuff",
  "twitter_username": "maybeScept3r",
  "paypal_email": "null"
} 
*/

  String? instagramUsername;
  String? portfolioUrl;
  String? twitterUsername;
  String? paypalEmail;
  Map<String, dynamic> __origJson = {};

  SelectedImageResponseRelatedCollectionsResultsUserSocial({
    this.instagramUsername,
    this.portfolioUrl,
    this.twitterUsername,
    this.paypalEmail,
  });
  SelectedImageResponseRelatedCollectionsResultsUserSocial.fromJson(
      Map<String, dynamic> json) {
    __origJson = json;
    instagramUsername = json['instagram_username']?.toString();
    portfolioUrl = json['portfolio_url']?.toString();
    twitterUsername = json['twitter_username']?.toString();
    paypalEmail = json['paypal_email']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['instagram_username'] = instagramUsername;
    data['portfolio_url'] = portfolioUrl;
    data['twitter_username'] = twitterUsername;
    data['paypal_email'] = paypalEmail;
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}

class SelectedImageResponseRelatedCollectionsResultsUserProfileImage {
/*
{
  "small": "https://images.unsplash.com/profile-1629697199247-088ad95ac733image?ixlib=rb-4.0.3&crop=faces&fit=crop&w=32&h=32",
  "medium": "https://images.unsplash.com/profile-1629697199247-088ad95ac733image?ixlib=rb-4.0.3&crop=faces&fit=crop&w=64&h=64",
  "large": "https://images.unsplash.com/profile-1629697199247-088ad95ac733image?ixlib=rb-4.0.3&crop=faces&fit=crop&w=128&h=128"
} 
*/

  String? small;
  String? medium;
  String? large;
  Map<String, dynamic> __origJson = {};

  SelectedImageResponseRelatedCollectionsResultsUserProfileImage({
    this.small,
    this.medium,
    this.large,
  });
  SelectedImageResponseRelatedCollectionsResultsUserProfileImage.fromJson(
      Map<String, dynamic> json) {
    __origJson = json;
    small = json['small']?.toString();
    medium = json['medium']?.toString();
    large = json['large']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['small'] = small;
    data['medium'] = medium;
    data['large'] = large;
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}

class SelectedImageResponseRelatedCollectionsResultsUserLinks {
/*
{
  "self": "https://api.unsplash.com/users/andallthings",
  "html": "https://unsplash.com/@andallthings",
  "photos": "https://api.unsplash.com/users/andallthings/photos",
  "likes": "https://api.unsplash.com/users/andallthings/likes",
  "portfolio": "https://api.unsplash.com/users/andallthings/portfolio",
  "following": "https://api.unsplash.com/users/andallthings/following",
  "followers": "https://api.unsplash.com/users/andallthings/followers"
} 
*/

  String? self;
  String? html;
  String? photos;
  String? likes;
  String? portfolio;
  String? following;
  String? followers;
  Map<String, dynamic> __origJson = {};

  SelectedImageResponseRelatedCollectionsResultsUserLinks({
    this.self,
    this.html,
    this.photos,
    this.likes,
    this.portfolio,
    this.following,
    this.followers,
  });
  SelectedImageResponseRelatedCollectionsResultsUserLinks.fromJson(
      Map<String, dynamic> json) {
    __origJson = json;
    self = json['self']?.toString();
    html = json['html']?.toString();
    photos = json['photos']?.toString();
    likes = json['likes']?.toString();
    portfolio = json['portfolio']?.toString();
    following = json['following']?.toString();
    followers = json['followers']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['self'] = self;
    data['html'] = html;
    data['photos'] = photos;
    data['likes'] = likes;
    data['portfolio'] = portfolio;
    data['following'] = following;
    data['followers'] = followers;
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}

class SelectedImageResponseRelatedCollectionsResultsUser {
/*
{
  "id": "cjMI8Jp6VEc",
  "updated_at": "2023-11-25T15:06:28Z",
  "username": "andallthings",
  "name": "ethan",
  "first_name": "ethan",
  "last_name": "null",
  "twitter_username": "maybeScept3r",
  "portfolio_url": "https://linktr.ee/scept3rdoesstuff",
  "bio": "phone photographer · anime-lover · cosplayer · front-end coder",
  "location": "null",
  "links": {
    "self": "https://api.unsplash.com/users/andallthings",
    "html": "https://unsplash.com/@andallthings",
    "photos": "https://api.unsplash.com/users/andallthings/photos",
    "likes": "https://api.unsplash.com/users/andallthings/likes",
    "portfolio": "https://api.unsplash.com/users/andallthings/portfolio",
    "following": "https://api.unsplash.com/users/andallthings/following",
    "followers": "https://api.unsplash.com/users/andallthings/followers"
  },
  "profile_image": {
    "small": "https://images.unsplash.com/profile-1629697199247-088ad95ac733image?ixlib=rb-4.0.3&crop=faces&fit=crop&w=32&h=32",
    "medium": "https://images.unsplash.com/profile-1629697199247-088ad95ac733image?ixlib=rb-4.0.3&crop=faces&fit=crop&w=64&h=64",
    "large": "https://images.unsplash.com/profile-1629697199247-088ad95ac733image?ixlib=rb-4.0.3&crop=faces&fit=crop&w=128&h=128"
  },
  "instagram_username": "null",
  "total_collections": 9,
  "total_likes": 13403,
  "total_photos": 118,
  "total_promoted_photos": 0,
  "accepted_tos": true,
  "for_hire": false,
  "social": {
    "instagram_username": "null",
    "portfolio_url": "https://linktr.ee/scept3rdoesstuff",
    "twitter_username": "maybeScept3r",
    "paypal_email": "null"
  }
} 
*/

  String? id;
  String? updatedAt;
  String? username;
  String? name;
  String? firstName;
  String? lastName;
  String? twitterUsername;
  String? portfolioUrl;
  String? bio;
  String? location;
  SelectedImageResponseRelatedCollectionsResultsUserLinks? links;
  SelectedImageResponseRelatedCollectionsResultsUserProfileImage? profileImage;
  String? instagramUsername;
  int? totalCollections;
  int? totalLikes;
  int? totalPhotos;
  int? totalPromotedPhotos;
  bool? acceptedTos;
  bool? forHire;
  SelectedImageResponseRelatedCollectionsResultsUserSocial? social;
  Map<String, dynamic> __origJson = {};

  SelectedImageResponseRelatedCollectionsResultsUser({
    this.id,
    this.updatedAt,
    this.username,
    this.name,
    this.firstName,
    this.lastName,
    this.twitterUsername,
    this.portfolioUrl,
    this.bio,
    this.location,
    this.links,
    this.profileImage,
    this.instagramUsername,
    this.totalCollections,
    this.totalLikes,
    this.totalPhotos,
    this.totalPromotedPhotos,
    this.acceptedTos,
    this.forHire,
    this.social,
  });
  SelectedImageResponseRelatedCollectionsResultsUser.fromJson(
      Map<String, dynamic> json) {
    __origJson = json;
    id = json['id']?.toString();
    updatedAt = json['updated_at']?.toString();
    username = json['username']?.toString();
    name = json['name']?.toString();
    firstName = json['first_name']?.toString();
    lastName = json['last_name']?.toString();
    twitterUsername = json['twitter_username']?.toString();
    portfolioUrl = json['portfolio_url']?.toString();
    bio = json['bio']?.toString();
    location = json['location']?.toString();
    links = (json['links'] != null)
        ? SelectedImageResponseRelatedCollectionsResultsUserLinks.fromJson(
            json['links'])
        : null;
    profileImage = (json['profile_image'] != null)
        ? SelectedImageResponseRelatedCollectionsResultsUserProfileImage
            .fromJson(json['profile_image'])
        : null;
    instagramUsername = json['instagram_username']?.toString();
    totalCollections = json['total_collections']?.toInt();
    totalLikes = json['total_likes']?.toInt();
    totalPhotos = json['total_photos']?.toInt();
    totalPromotedPhotos = json['total_promoted_photos']?.toInt();
    acceptedTos = json['accepted_tos'];
    forHire = json['for_hire'];
    social = (json['social'] != null)
        ? SelectedImageResponseRelatedCollectionsResultsUserSocial.fromJson(
            json['social'])
        : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['updated_at'] = updatedAt;
    data['username'] = username;
    data['name'] = name;
    data['first_name'] = firstName;
    data['last_name'] = lastName;
    data['twitter_username'] = twitterUsername;
    data['portfolio_url'] = portfolioUrl;
    data['bio'] = bio;
    data['location'] = location;
    if (links != null) {
      data['links'] = links!.toJson();
    }
    if (profileImage != null) {
      data['profile_image'] = profileImage!.toJson();
    }
    data['instagram_username'] = instagramUsername;
    data['total_collections'] = totalCollections;
    data['total_likes'] = totalLikes;
    data['total_photos'] = totalPhotos;
    data['total_promoted_photos'] = totalPromotedPhotos;
    data['accepted_tos'] = acceptedTos;
    data['for_hire'] = forHire;
    if (social != null) {
      data['social'] = social!.toJson();
    }
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}

class SelectedImageResponseRelatedCollectionsResultsLinks {
/*
{
  "self": "https://api.unsplash.com/collections/9673872",
  "html": "https://unsplash.com/collections/9673872/we-the-people",
  "photos": "https://api.unsplash.com/collections/9673872/photos",
  "related": "https://api.unsplash.com/collections/9673872/related"
} 
*/

  String? self;
  String? html;
  String? photos;
  String? related;
  Map<String, dynamic> __origJson = {};

  SelectedImageResponseRelatedCollectionsResultsLinks({
    this.self,
    this.html,
    this.photos,
    this.related,
  });
  SelectedImageResponseRelatedCollectionsResultsLinks.fromJson(
      Map<String, dynamic> json) {
    __origJson = json;
    self = json['self']?.toString();
    html = json['html']?.toString();
    photos = json['photos']?.toString();
    related = json['related']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['self'] = self;
    data['html'] = html;
    data['photos'] = photos;
    data['related'] = related;
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}

class SelectedImageResponseRelatedCollectionsResultsTags {
/*
{
  "type": "search",
  "title": "we"
} 
*/

  String? type;
  String? title;
  Map<String, dynamic> __origJson = {};

  SelectedImageResponseRelatedCollectionsResultsTags({
    this.type,
    this.title,
  });
  SelectedImageResponseRelatedCollectionsResultsTags.fromJson(
      Map<String, dynamic> json) {
    __origJson = json;
    type = json['type']?.toString();
    title = json['title']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['type'] = type;
    data['title'] = title;
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}

class SelectedImageResponseRelatedCollectionsResults {
/*
{
  "id": "9673872",
  "title": "We",
  "description": "null",
  "published_at": "2020-03-10T02:08:10Z",
  "last_collected_at": "2023-11-30T08:55:42Z",
  "updated_at": "2023-11-30T09:06:07Z",
  "featured": false,
  "total_photos": 3855,
  "private": false,
  "share_key": "5056ea9eef3ab3ec872efefcd60a0edc",
  "tags": [
    {
      "type": "search",
      "title": "we"
    }
  ],
  "links": {
    "self": "https://api.unsplash.com/collections/9673872",
    "html": "https://unsplash.com/collections/9673872/we-the-people",
    "photos": "https://api.unsplash.com/collections/9673872/photos",
    "related": "https://api.unsplash.com/collections/9673872/related"
  },
  "user": {
    "id": "cjMI8Jp6VEc",
    "updated_at": "2023-11-25T15:06:28Z",
    "username": "andallthings",
    "name": "ethan",
    "first_name": "ethan",
    "last_name": "null",
    "twitter_username": "maybeScept3r",
    "portfolio_url": "https://linktr.ee/scept3rdoesstuff",
    "bio": "phone photographer · anime-lover · cosplayer · front-end coder",
    "location": "null",
    "links": {
      "self": "https://api.unsplash.com/users/andallthings",
      "html": "https://unsplash.com/@andallthings",
      "photos": "https://api.unsplash.com/users/andallthings/photos",
      "likes": "https://api.unsplash.com/users/andallthings/likes",
      "portfolio": "https://api.unsplash.com/users/andallthings/portfolio",
      "following": "https://api.unsplash.com/users/andallthings/following",
      "followers": "https://api.unsplash.com/users/andallthings/followers"
    },
    "profile_image": {
      "small": "https://images.unsplash.com/profile-1629697199247-088ad95ac733image?ixlib=rb-4.0.3&crop=faces&fit=crop&w=32&h=32",
      "medium": "https://images.unsplash.com/profile-1629697199247-088ad95ac733image?ixlib=rb-4.0.3&crop=faces&fit=crop&w=64&h=64",
      "large": "https://images.unsplash.com/profile-1629697199247-088ad95ac733image?ixlib=rb-4.0.3&crop=faces&fit=crop&w=128&h=128"
    },
    "instagram_username": "null",
    "total_collections": 9,
    "total_likes": 13403,
    "total_photos": 118,
    "total_promoted_photos": 0,
    "accepted_tos": true,
    "for_hire": false,
    "social": {
      "instagram_username": "null",
      "portfolio_url": "https://linktr.ee/scept3rdoesstuff",
      "twitter_username": "maybeScept3r",
      "paypal_email": "null"
    }
  },
  "cover_photo": {
    "id": "GVpDJvR9wGI",
    "slug": "a-woman-with-long-hair-and-red-glasses-GVpDJvR9wGI",
    "created_at": "2023-11-21T22:19:30Z",
    "updated_at": "2023-12-08T00:24:06Z",
    "promoted_at": "2023-11-24T07:48:01Z",
    "width": 4160,
    "height": 5824,
    "color": "#260c0c",
    "blur_hash": "LF7wZ+j[0eae?GfR9aayNHWVs:of",
    "description": "null",
    "alt_description": "a woman with long hair and red glasses",
    "breadcrumbs": [
      ""
    ],
    "urls": {
      "raw": "https://images.unsplash.com/photo-1700605149722-50c0d7fe003d?ixlib=rb-4.0.3",
      "full": "https://images.unsplash.com/photo-1700605149722-50c0d7fe003d?ixlib=rb-4.0.3&q=85&fm=jpg&crop=entropy&cs=srgb",
      "regular": "https://images.unsplash.com/photo-1700605149722-50c0d7fe003d?ixlib=rb-4.0.3&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max",
      "small": "https://images.unsplash.com/photo-1700605149722-50c0d7fe003d?ixlib=rb-4.0.3&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=400&fit=max",
      "thumb": "https://images.unsplash.com/photo-1700605149722-50c0d7fe003d?ixlib=rb-4.0.3&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=200&fit=max",
      "small_s3": "https://s3.us-west-2.amazonaws.com/images.unsplash.com/small/photo-1700605149722-50c0d7fe003d"
    },
    "links": {
      "self": "https://api.unsplash.com/photos/a-woman-with-long-hair-and-red-glasses-GVpDJvR9wGI",
      "html": "https://unsplash.com/photos/a-woman-with-long-hair-and-red-glasses-GVpDJvR9wGI",
      "download": "https://unsplash.com/photos/GVpDJvR9wGI/download",
      "download_location": "https://api.unsplash.com/photos/GVpDJvR9wGI/download"
    },
    "likes": 84,
    "liked_by_user": false,
    "current_user_collections": [
      ""
    ],
    "sponsorship": "null",
    "topic_submissions": {
      "fashion-beauty": {
        "status": "approved",
        "approved_on": "2023-11-24T10:20:55Z"
      }
    },
    "user": {
      "id": "XhDgsEZoUlA",
      "updated_at": "2023-12-06T01:22:29Z",
      "username": "ylvlso",
      "name": "uliana soboleva",
      "first_name": "uliana",
      "last_name": "soboleva",
      "twitter_username": "null",
      "portfolio_url": "null",
      "bio": "null",
      "location": "null",
      "links": {
        "self": "https://api.unsplash.com/users/ylvlso",
        "html": "https://unsplash.com/@ylvlso",
        "photos": "https://api.unsplash.com/users/ylvlso/photos",
        "likes": "https://api.unsplash.com/users/ylvlso/likes",
        "portfolio": "https://api.unsplash.com/users/ylvlso/portfolio",
        "following": "https://api.unsplash.com/users/ylvlso/following",
        "followers": "https://api.unsplash.com/users/ylvlso/followers"
      },
      "profile_image": {
        "small": "https://images.unsplash.com/profile-1670961867620-30bf72c02888?ixlib=rb-4.0.3&crop=faces&fit=crop&w=32&h=32",
        "medium": "https://images.unsplash.com/profile-1670961867620-30bf72c02888?ixlib=rb-4.0.3&crop=faces&fit=crop&w=64&h=64",
        "large": "https://images.unsplash.com/profile-1670961867620-30bf72c02888?ixlib=rb-4.0.3&crop=faces&fit=crop&w=128&h=128"
      },
      "instagram_username": "null",
      "total_collections": 0,
      "total_likes": 39,
      "total_photos": 68,
      "total_promoted_photos": 5,
      "accepted_tos": true,
      "for_hire": false,
      "social": {
        "instagram_username": "null",
        "portfolio_url": "null",
        "twitter_username": "null",
        "paypal_email": "null"
      }
    }
  },
  "preview_photos": [
    {
      "id": "GVpDJvR9wGI",
      "slug": "a-woman-with-long-hair-and-red-glasses-GVpDJvR9wGI",
      "created_at": "2023-11-21T22:19:30Z",
      "updated_at": "2023-12-08T00:24:06Z",
      "blur_hash": "LF7wZ+j[0eae?GfR9aayNHWVs:of",
      "urls": {
        "raw": "https://images.unsplash.com/photo-1700605149722-50c0d7fe003d?ixlib=rb-4.0.3",
        "full": "https://images.unsplash.com/photo-1700605149722-50c0d7fe003d?ixlib=rb-4.0.3&q=85&fm=jpg&crop=entropy&cs=srgb",
        "regular": "https://images.unsplash.com/photo-1700605149722-50c0d7fe003d?ixlib=rb-4.0.3&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max",
        "small": "https://images.unsplash.com/photo-1700605149722-50c0d7fe003d?ixlib=rb-4.0.3&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=400&fit=max",
        "thumb": "https://images.unsplash.com/photo-1700605149722-50c0d7fe003d?ixlib=rb-4.0.3&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=200&fit=max",
        "small_s3": "https://s3.us-west-2.amazonaws.com/images.unsplash.com/small/photo-1700605149722-50c0d7fe003d"
      }
    }
  ]
} 
*/

  String? id;
  String? title;
  String? description;
  String? publishedAt;
  String? lastCollectedAt;
  String? updatedAt;
  bool? featured;
  int? totalPhotos;
  bool? private;
  String? shareKey;
  List<SelectedImageResponseRelatedCollectionsResultsTags?>? tags;
  SelectedImageResponseRelatedCollectionsResultsLinks? links;
  SelectedImageResponseRelatedCollectionsResultsUser? user;
  SelectedImageResponseRelatedCollectionsResultsCoverPhoto? coverPhoto;
  List<SelectedImageResponseRelatedCollectionsResultsPreviewPhotos?>?
      previewPhotos;
  Map<String, dynamic> __origJson = {};

  SelectedImageResponseRelatedCollectionsResults({
    this.id,
    this.title,
    this.description,
    this.publishedAt,
    this.lastCollectedAt,
    this.updatedAt,
    this.featured,
    this.totalPhotos,
    this.private,
    this.shareKey,
    this.tags,
    this.links,
    this.user,
    this.coverPhoto,
    this.previewPhotos,
  });
  SelectedImageResponseRelatedCollectionsResults.fromJson(
      Map<String, dynamic> json) {
    __origJson = json;
    id = json['id']?.toString();
    title = json['title']?.toString();
    description = json['description']?.toString();
    publishedAt = json['published_at']?.toString();
    lastCollectedAt = json['last_collected_at']?.toString();
    updatedAt = json['updated_at']?.toString();
    featured = json['featured'];
    totalPhotos = json['total_photos']?.toInt();
    private = json['private'];
    shareKey = json['share_key']?.toString();
    if (json['tags'] != null) {
      final v = json['tags'];
      final arr0 = <SelectedImageResponseRelatedCollectionsResultsTags>[];
      v.forEach((v) {
        arr0.add(
            SelectedImageResponseRelatedCollectionsResultsTags.fromJson(v));
      });
      tags = arr0;
    }
    links = (json['links'] != null)
        ? SelectedImageResponseRelatedCollectionsResultsLinks.fromJson(
            json['links'])
        : null;
    user = (json['user'] != null)
        ? SelectedImageResponseRelatedCollectionsResultsUser.fromJson(
            json['user'])
        : null;
    coverPhoto = (json['cover_photo'] != null)
        ? SelectedImageResponseRelatedCollectionsResultsCoverPhoto.fromJson(
            json['cover_photo'])
        : null;
    if (json['preview_photos'] != null) {
      final v = json['preview_photos'];
      final arr0 =
          <SelectedImageResponseRelatedCollectionsResultsPreviewPhotos>[];
      v.forEach((v) {
        arr0.add(SelectedImageResponseRelatedCollectionsResultsPreviewPhotos
            .fromJson(v));
      });
      previewPhotos = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['title'] = title;
    data['description'] = description;
    data['published_at'] = publishedAt;
    data['last_collected_at'] = lastCollectedAt;
    data['updated_at'] = updatedAt;
    data['featured'] = featured;
    data['total_photos'] = totalPhotos;
    data['private'] = private;
    data['share_key'] = shareKey;
    if (tags != null) {
      final v = tags;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['tags'] = arr0;
    }
    if (links != null) {
      data['links'] = links!.toJson();
    }
    if (user != null) {
      data['user'] = user!.toJson();
    }
    if (coverPhoto != null) {
      data['cover_photo'] = coverPhoto!.toJson();
    }
    if (previewPhotos != null) {
      final v = previewPhotos;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['preview_photos'] = arr0;
    }
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}

class SelectedImageResponseRelatedCollections {
/*
{
  "total": 3,
  "type": "related",
  "results": [
    {
      "id": "9673872",
      "title": "We",
      "description": "null",
      "published_at": "2020-03-10T02:08:10Z",
      "last_collected_at": "2023-11-30T08:55:42Z",
      "updated_at": "2023-11-30T09:06:07Z",
      "featured": false,
      "total_photos": 3855,
      "private": false,
      "share_key": "5056ea9eef3ab3ec872efefcd60a0edc",
      "tags": [
        {
          "type": "search",
          "title": "we"
        }
      ],
      "links": {
        "self": "https://api.unsplash.com/collections/9673872",
        "html": "https://unsplash.com/collections/9673872/we-the-people",
        "photos": "https://api.unsplash.com/collections/9673872/photos",
        "related": "https://api.unsplash.com/collections/9673872/related"
      },
      "user": {
        "id": "cjMI8Jp6VEc",
        "updated_at": "2023-11-25T15:06:28Z",
        "username": "andallthings",
        "name": "ethan",
        "first_name": "ethan",
        "last_name": "null",
        "twitter_username": "maybeScept3r",
        "portfolio_url": "https://linktr.ee/scept3rdoesstuff",
        "bio": "phone photographer · anime-lover · cosplayer · front-end coder",
        "location": "null",
        "links": {
          "self": "https://api.unsplash.com/users/andallthings",
          "html": "https://unsplash.com/@andallthings",
          "photos": "https://api.unsplash.com/users/andallthings/photos",
          "likes": "https://api.unsplash.com/users/andallthings/likes",
          "portfolio": "https://api.unsplash.com/users/andallthings/portfolio",
          "following": "https://api.unsplash.com/users/andallthings/following",
          "followers": "https://api.unsplash.com/users/andallthings/followers"
        },
        "profile_image": {
          "small": "https://images.unsplash.com/profile-1629697199247-088ad95ac733image?ixlib=rb-4.0.3&crop=faces&fit=crop&w=32&h=32",
          "medium": "https://images.unsplash.com/profile-1629697199247-088ad95ac733image?ixlib=rb-4.0.3&crop=faces&fit=crop&w=64&h=64",
          "large": "https://images.unsplash.com/profile-1629697199247-088ad95ac733image?ixlib=rb-4.0.3&crop=faces&fit=crop&w=128&h=128"
        },
        "instagram_username": "null",
        "total_collections": 9,
        "total_likes": 13403,
        "total_photos": 118,
        "total_promoted_photos": 0,
        "accepted_tos": true,
        "for_hire": false,
        "social": {
          "instagram_username": "null",
          "portfolio_url": "https://linktr.ee/scept3rdoesstuff",
          "twitter_username": "maybeScept3r",
          "paypal_email": "null"
        }
      },
      "cover_photo": {
        "id": "GVpDJvR9wGI",
        "slug": "a-woman-with-long-hair-and-red-glasses-GVpDJvR9wGI",
        "created_at": "2023-11-21T22:19:30Z",
        "updated_at": "2023-12-08T00:24:06Z",
        "promoted_at": "2023-11-24T07:48:01Z",
        "width": 4160,
        "height": 5824,
        "color": "#260c0c",
        "blur_hash": "LF7wZ+j[0eae?GfR9aayNHWVs:of",
        "description": "null",
        "alt_description": "a woman with long hair and red glasses",
        "breadcrumbs": [
          ""
        ],
        "urls": {
          "raw": "https://images.unsplash.com/photo-1700605149722-50c0d7fe003d?ixlib=rb-4.0.3",
          "full": "https://images.unsplash.com/photo-1700605149722-50c0d7fe003d?ixlib=rb-4.0.3&q=85&fm=jpg&crop=entropy&cs=srgb",
          "regular": "https://images.unsplash.com/photo-1700605149722-50c0d7fe003d?ixlib=rb-4.0.3&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max",
          "small": "https://images.unsplash.com/photo-1700605149722-50c0d7fe003d?ixlib=rb-4.0.3&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=400&fit=max",
          "thumb": "https://images.unsplash.com/photo-1700605149722-50c0d7fe003d?ixlib=rb-4.0.3&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=200&fit=max",
          "small_s3": "https://s3.us-west-2.amazonaws.com/images.unsplash.com/small/photo-1700605149722-50c0d7fe003d"
        },
        "links": {
          "self": "https://api.unsplash.com/photos/a-woman-with-long-hair-and-red-glasses-GVpDJvR9wGI",
          "html": "https://unsplash.com/photos/a-woman-with-long-hair-and-red-glasses-GVpDJvR9wGI",
          "download": "https://unsplash.com/photos/GVpDJvR9wGI/download",
          "download_location": "https://api.unsplash.com/photos/GVpDJvR9wGI/download"
        },
        "likes": 84,
        "liked_by_user": false,
        "current_user_collections": [
          ""
        ],
        "sponsorship": "null",
        "topic_submissions": {
          "fashion-beauty": {
            "status": "approved",
            "approved_on": "2023-11-24T10:20:55Z"
          }
        },
        "user": {
          "id": "XhDgsEZoUlA",
          "updated_at": "2023-12-06T01:22:29Z",
          "username": "ylvlso",
          "name": "uliana soboleva",
          "first_name": "uliana",
          "last_name": "soboleva",
          "twitter_username": "null",
          "portfolio_url": "null",
          "bio": "null",
          "location": "null",
          "links": {
            "self": "https://api.unsplash.com/users/ylvlso",
            "html": "https://unsplash.com/@ylvlso",
            "photos": "https://api.unsplash.com/users/ylvlso/photos",
            "likes": "https://api.unsplash.com/users/ylvlso/likes",
            "portfolio": "https://api.unsplash.com/users/ylvlso/portfolio",
            "following": "https://api.unsplash.com/users/ylvlso/following",
            "followers": "https://api.unsplash.com/users/ylvlso/followers"
          },
          "profile_image": {
            "small": "https://images.unsplash.com/profile-1670961867620-30bf72c02888?ixlib=rb-4.0.3&crop=faces&fit=crop&w=32&h=32",
            "medium": "https://images.unsplash.com/profile-1670961867620-30bf72c02888?ixlib=rb-4.0.3&crop=faces&fit=crop&w=64&h=64",
            "large": "https://images.unsplash.com/profile-1670961867620-30bf72c02888?ixlib=rb-4.0.3&crop=faces&fit=crop&w=128&h=128"
          },
          "instagram_username": "null",
          "total_collections": 0,
          "total_likes": 39,
          "total_photos": 68,
          "total_promoted_photos": 5,
          "accepted_tos": true,
          "for_hire": false,
          "social": {
            "instagram_username": "null",
            "portfolio_url": "null",
            "twitter_username": "null",
            "paypal_email": "null"
          }
        }
      },
      "preview_photos": [
        {
          "id": "GVpDJvR9wGI",
          "slug": "a-woman-with-long-hair-and-red-glasses-GVpDJvR9wGI",
          "created_at": "2023-11-21T22:19:30Z",
          "updated_at": "2023-12-08T00:24:06Z",
          "blur_hash": "LF7wZ+j[0eae?GfR9aayNHWVs:of",
          "urls": {
            "raw": "https://images.unsplash.com/photo-1700605149722-50c0d7fe003d?ixlib=rb-4.0.3",
            "full": "https://images.unsplash.com/photo-1700605149722-50c0d7fe003d?ixlib=rb-4.0.3&q=85&fm=jpg&crop=entropy&cs=srgb",
            "regular": "https://images.unsplash.com/photo-1700605149722-50c0d7fe003d?ixlib=rb-4.0.3&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max",
            "small": "https://images.unsplash.com/photo-1700605149722-50c0d7fe003d?ixlib=rb-4.0.3&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=400&fit=max",
            "thumb": "https://images.unsplash.com/photo-1700605149722-50c0d7fe003d?ixlib=rb-4.0.3&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=200&fit=max",
            "small_s3": "https://s3.us-west-2.amazonaws.com/images.unsplash.com/small/photo-1700605149722-50c0d7fe003d"
          }
        }
      ]
    }
  ]
} 
*/

  int? total;
  String? type;
  List<SelectedImageResponseRelatedCollectionsResults?>? results;
  Map<String, dynamic> __origJson = {};

  SelectedImageResponseRelatedCollections({
    this.total,
    this.type,
    this.results,
  });
  SelectedImageResponseRelatedCollections.fromJson(Map<String, dynamic> json) {
    __origJson = json;
    total = json['total']?.toInt();
    type = json['type']?.toString();
    if (json['results'] != null) {
      final v = json['results'];
      final arr0 = <SelectedImageResponseRelatedCollectionsResults>[];
      v.forEach((v) {
        arr0.add(SelectedImageResponseRelatedCollectionsResults.fromJson(v));
      });
      results = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['total'] = total;
    data['type'] = type;
    if (results != null) {
      final v = results;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['results'] = arr0;
    }
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}

class SelectedImageResponseTopics {
/*
{
  "id": "towJZFskpGg",
  "title": "People",
  "slug": "people",
  "visibility": "featured"
} 
*/

  String? id;
  String? title;
  String? slug;
  String? visibility;
  Map<String, dynamic> __origJson = {};

  SelectedImageResponseTopics({
    this.id,
    this.title,
    this.slug,
    this.visibility,
  });
  SelectedImageResponseTopics.fromJson(Map<String, dynamic> json) {
    __origJson = json;
    id = json['id']?.toString();
    title = json['title']?.toString();
    slug = json['slug']?.toString();
    visibility = json['visibility']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['title'] = title;
    data['slug'] = slug;
    data['visibility'] = visibility;
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}

class SelectedImageResponseTagsPreview {
/*
{
  "type": "search",
  "title": "clothing"
} 
*/

  String? type;
  String? title;
  Map<String, dynamic> __origJson = {};

  SelectedImageResponseTagsPreview({
    this.type,
    this.title,
  });
  SelectedImageResponseTagsPreview.fromJson(Map<String, dynamic> json) {
    __origJson = json;
    type = json['type']?.toString();
    title = json['title']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['type'] = type;
    data['title'] = title;
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}

class SelectedImageResponseTags {
/*
{
  "type": "search",
  "title": "clothing"
} 
*/

  String? type;
  String? title;
  Map<String, dynamic> __origJson = {};

  SelectedImageResponseTags({
    this.type,
    this.title,
  });
  SelectedImageResponseTags.fromJson(Map<String, dynamic> json) {
    __origJson = json;
    type = json['type']?.toString();
    title = json['title']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['type'] = type;
    data['title'] = title;
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}

class SelectedImageResponseMeta {
/*
{
  "index": true
} 
*/

  bool? index;
  Map<String, dynamic> __origJson = {};

  SelectedImageResponseMeta({
    this.index,
  });
  SelectedImageResponseMeta.fromJson(Map<String, dynamic> json) {
    __origJson = json;
    index = json['index'];
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['index'] = index;
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}

class SelectedImageResponseLocationPosition {
/*
{
  "latitude": "null",
  "longitude": "null"
} 
*/

  String? latitude;
  String? longitude;
  Map<String, dynamic> __origJson = {};

  SelectedImageResponseLocationPosition({
    this.latitude,
    this.longitude,
  });
  SelectedImageResponseLocationPosition.fromJson(Map<String, dynamic> json) {
    __origJson = json;
    latitude = json['latitude']?.toString();
    longitude = json['longitude']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['latitude'] = latitude;
    data['longitude'] = longitude;
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}

class SelectedImageResponseLocation {
/*
{
  "name": "null",
  "city": "null",
  "country": "null",
  "position": {
    "latitude": "null",
    "longitude": "null"
  }
} 
*/

  String? name;
  String? city;
  String? country;
  SelectedImageResponseLocationPosition? position;
  Map<String, dynamic> __origJson = {};

  SelectedImageResponseLocation({
    this.name,
    this.city,
    this.country,
    this.position,
  });
  SelectedImageResponseLocation.fromJson(Map<String, dynamic> json) {
    __origJson = json;
    name = json['name']?.toString();
    city = json['city']?.toString();
    country = json['country']?.toString();
    position = (json['position'] != null)
        ? SelectedImageResponseLocationPosition.fromJson(json['position'])
        : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['name'] = name;
    data['city'] = city;
    data['country'] = country;
    if (position != null) {
      data['position'] = position!.toJson();
    }
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}

class SelectedImageResponseExif {
/*
{
  "make": "null",
  "model": "null",
  "name": "null",
  "exposure_time": "null",
  "aperture": "null",
  "focal_length": "null",
  "iso": "null"
} 
*/

  String? make;
  String? model;
  String? name;
  String? exposureTime;
  String? aperture;
  String? focalLength;
  String? iso;
  Map<String, dynamic> __origJson = {};

  SelectedImageResponseExif({
    this.make,
    this.model,
    this.name,
    this.exposureTime,
    this.aperture,
    this.focalLength,
    this.iso,
  });
  SelectedImageResponseExif.fromJson(Map<String, dynamic> json) {
    __origJson = json;
    make = json['make']?.toString();
    model = json['model']?.toString();
    name = json['name']?.toString();
    exposureTime = json['exposure_time']?.toString();
    aperture = json['aperture']?.toString();
    focalLength = json['focal_length']?.toString();
    iso = json['iso']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['make'] = make;
    data['model'] = model;
    data['name'] = name;
    data['exposure_time'] = exposureTime;
    data['aperture'] = aperture;
    data['focal_length'] = focalLength;
    data['iso'] = iso;
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}

class SelectedImageResponseUserSocial {
/*
{
  "instagram_username": "majestical_jazz",
  "portfolio_url": "http://jasminchew.com",
  "twitter_username": "null",
  "paypal_email": "null"
} 
*/

  String? instagramUsername;
  String? portfolioUrl;
  String? twitterUsername;
  String? paypalEmail;
  Map<String, dynamic> __origJson = {};

  SelectedImageResponseUserSocial({
    this.instagramUsername,
    this.portfolioUrl,
    this.twitterUsername,
    this.paypalEmail,
  });
  SelectedImageResponseUserSocial.fromJson(Map<String, dynamic> json) {
    __origJson = json;
    instagramUsername = json['instagram_username']?.toString();
    portfolioUrl = json['portfolio_url']?.toString();
    twitterUsername = json['twitter_username']?.toString();
    paypalEmail = json['paypal_email']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['instagram_username'] = instagramUsername;
    data['portfolio_url'] = portfolioUrl;
    data['twitter_username'] = twitterUsername;
    data['paypal_email'] = paypalEmail;
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}

class SelectedImageResponseUserProfileImage {
/*
{
  "small": "https://images.unsplash.com/profile-1629930000752-cf2b8a41d392image?ixlib=rb-4.0.3&crop=faces&fit=crop&w=32&h=32",
  "medium": "https://images.unsplash.com/profile-1629930000752-cf2b8a41d392image?ixlib=rb-4.0.3&crop=faces&fit=crop&w=64&h=64",
  "large": "https://images.unsplash.com/profile-1629930000752-cf2b8a41d392image?ixlib=rb-4.0.3&crop=faces&fit=crop&w=128&h=128"
} 
*/

  String? small;
  String? medium;
  String? large;
  Map<String, dynamic> __origJson = {};

  SelectedImageResponseUserProfileImage({
    this.small,
    this.medium,
    this.large,
  });
  SelectedImageResponseUserProfileImage.fromJson(Map<String, dynamic> json) {
    __origJson = json;
    small = json['small']?.toString();
    medium = json['medium']?.toString();
    large = json['large']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['small'] = small;
    data['medium'] = medium;
    data['large'] = large;
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}

class SelectedImageResponseUserLinks {
/*
{
  "self": "https://api.unsplash.com/users/majestical_jasmin",
  "html": "https://unsplash.com/@majestical_jasmin",
  "photos": "https://api.unsplash.com/users/majestical_jasmin/photos",
  "likes": "https://api.unsplash.com/users/majestical_jasmin/likes",
  "portfolio": "https://api.unsplash.com/users/majestical_jasmin/portfolio",
  "following": "https://api.unsplash.com/users/majestical_jasmin/following",
  "followers": "https://api.unsplash.com/users/majestical_jasmin/followers"
} 
*/

  String? self;
  String? html;
  String? photos;
  String? likes;
  String? portfolio;
  String? following;
  String? followers;
  Map<String, dynamic> __origJson = {};

  SelectedImageResponseUserLinks({
    this.self,
    this.html,
    this.photos,
    this.likes,
    this.portfolio,
    this.following,
    this.followers,
  });
  SelectedImageResponseUserLinks.fromJson(Map<String, dynamic> json) {
    __origJson = json;
    self = json['self']?.toString();
    html = json['html']?.toString();
    photos = json['photos']?.toString();
    likes = json['likes']?.toString();
    portfolio = json['portfolio']?.toString();
    following = json['following']?.toString();
    followers = json['followers']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['self'] = self;
    data['html'] = html;
    data['photos'] = photos;
    data['likes'] = likes;
    data['portfolio'] = portfolio;
    data['following'] = following;
    data['followers'] = followers;
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}

class SelectedImageResponseUser {
/*
{
  "id": "N4NQrNsllDs",
  "updated_at": "2023-11-13T14:14:11Z",
  "username": "majestical_jasmin",
  "name": "Jasmin Chew",
  "first_name": "Jasmin",
  "last_name": "Chew",
  "twitter_username": "null",
  "portfolio_url": "http://jasminchew.com",
  "bio": "IG: @majestical_jazz\r\njasminchewphoto@gmail.com   I www.jasminchew.com",
  "location": "Toronto, Ontario ",
  "links": {
    "self": "https://api.unsplash.com/users/majestical_jasmin",
    "html": "https://unsplash.com/@majestical_jasmin",
    "photos": "https://api.unsplash.com/users/majestical_jasmin/photos",
    "likes": "https://api.unsplash.com/users/majestical_jasmin/likes",
    "portfolio": "https://api.unsplash.com/users/majestical_jasmin/portfolio",
    "following": "https://api.unsplash.com/users/majestical_jasmin/following",
    "followers": "https://api.unsplash.com/users/majestical_jasmin/followers"
  },
  "profile_image": {
    "small": "https://images.unsplash.com/profile-1629930000752-cf2b8a41d392image?ixlib=rb-4.0.3&crop=faces&fit=crop&w=32&h=32",
    "medium": "https://images.unsplash.com/profile-1629930000752-cf2b8a41d392image?ixlib=rb-4.0.3&crop=faces&fit=crop&w=64&h=64",
    "large": "https://images.unsplash.com/profile-1629930000752-cf2b8a41d392image?ixlib=rb-4.0.3&crop=faces&fit=crop&w=128&h=128"
  },
  "instagram_username": "majestical_jazz",
  "total_collections": 0,
  "total_likes": 123,
  "total_photos": 805,
  "total_promoted_photos": 288,
  "accepted_tos": true,
  "for_hire": true,
  "social": {
    "instagram_username": "majestical_jazz",
    "portfolio_url": "http://jasminchew.com",
    "twitter_username": "null",
    "paypal_email": "null"
  }
} 
*/

  String? id;
  String? updatedAt;
  String? username;
  String? name;
  String? firstName;
  String? lastName;
  String? twitterUsername;
  String? portfolioUrl;
  String? bio;
  String? location;
  SelectedImageResponseUserLinks? links;
  SelectedImageResponseUserProfileImage? profileImage;
  String? instagramUsername;
  int? totalCollections;
  int? totalLikes;
  int? totalPhotos;
  int? totalPromotedPhotos;
  bool? acceptedTos;
  bool? forHire;
  SelectedImageResponseUserSocial? social;
  Map<String, dynamic> __origJson = {};

  SelectedImageResponseUser({
    this.id,
    this.updatedAt,
    this.username,
    this.name,
    this.firstName,
    this.lastName,
    this.twitterUsername,
    this.portfolioUrl,
    this.bio,
    this.location,
    this.links,
    this.profileImage,
    this.instagramUsername,
    this.totalCollections,
    this.totalLikes,
    this.totalPhotos,
    this.totalPromotedPhotos,
    this.acceptedTos,
    this.forHire,
    this.social,
  });
  SelectedImageResponseUser.fromJson(Map<String, dynamic> json) {
    __origJson = json;
    id = json['id']?.toString();
    updatedAt = json['updated_at']?.toString();
    username = json['username']?.toString();
    name = json['name']?.toString();
    firstName = json['first_name']?.toString();
    lastName = json['last_name']?.toString();
    twitterUsername = json['twitter_username']?.toString();
    portfolioUrl = json['portfolio_url']?.toString();
    bio = json['bio']?.toString();
    location = json['location']?.toString();
    links = (json['links'] != null)
        ? SelectedImageResponseUserLinks.fromJson(json['links'])
        : null;
    profileImage = (json['profile_image'] != null)
        ? SelectedImageResponseUserProfileImage.fromJson(json['profile_image'])
        : null;
    instagramUsername = json['instagram_username']?.toString();
    totalCollections = json['total_collections']?.toInt();
    totalLikes = json['total_likes']?.toInt();
    totalPhotos = json['total_photos']?.toInt();
    totalPromotedPhotos = json['total_promoted_photos']?.toInt();
    acceptedTos = json['accepted_tos'];
    forHire = json['for_hire'];
    social = (json['social'] != null)
        ? SelectedImageResponseUserSocial.fromJson(json['social'])
        : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['updated_at'] = updatedAt;
    data['username'] = username;
    data['name'] = name;
    data['first_name'] = firstName;
    data['last_name'] = lastName;
    data['twitter_username'] = twitterUsername;
    data['portfolio_url'] = portfolioUrl;
    data['bio'] = bio;
    data['location'] = location;
    if (links != null) {
      data['links'] = links!.toJson();
    }
    if (profileImage != null) {
      data['profile_image'] = profileImage!.toJson();
    }
    data['instagram_username'] = instagramUsername;
    data['total_collections'] = totalCollections;
    data['total_likes'] = totalLikes;
    data['total_photos'] = totalPhotos;
    data['total_promoted_photos'] = totalPromotedPhotos;
    data['accepted_tos'] = acceptedTos;
    data['for_hire'] = forHire;
    if (social != null) {
      data['social'] = social!.toJson();
    }
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}

class SelectedImageResponseTopicSubmissionsTheHolidays {
/*
{
  "status": "approved",
  "approved_on": "2023-12-08T19:21:38Z"
} 
*/

  String? status;
  String? approvedOn;
  Map<String, dynamic> __origJson = {};

  SelectedImageResponseTopicSubmissionsTheHolidays({
    this.status,
    this.approvedOn,
  });
  SelectedImageResponseTopicSubmissionsTheHolidays.fromJson(
      Map<String, dynamic> json) {
    __origJson = json;
    status = json['status']?.toString();
    approvedOn = json['approved_on']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['status'] = status;
    data['approved_on'] = approvedOn;
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}

class SelectedImageResponseTopicSubmissionsPeople {
/*
{
  "status": "approved",
  "approved_on": "2023-12-08T19:21:32Z"
} 
*/

  String? status;
  String? approvedOn;
  Map<String, dynamic> __origJson = {};

  SelectedImageResponseTopicSubmissionsPeople({
    this.status,
    this.approvedOn,
  });
  SelectedImageResponseTopicSubmissionsPeople.fromJson(
      Map<String, dynamic> json) {
    __origJson = json;
    status = json['status']?.toString();
    approvedOn = json['approved_on']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['status'] = status;
    data['approved_on'] = approvedOn;
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}

class SelectedImageResponseTopicSubmissions {
/*
{
  "people": {
    "status": "approved",
    "approved_on": "2023-12-08T19:21:32Z"
  },
  "the-holidays": {
    "status": "approved",
    "approved_on": "2023-12-08T19:21:38Z"
  }
} 
*/

  SelectedImageResponseTopicSubmissionsPeople? people;
  SelectedImageResponseTopicSubmissionsTheHolidays? theHolidays;
  Map<String, dynamic> __origJson = {};

  SelectedImageResponseTopicSubmissions({
    this.people,
    this.theHolidays,
  });
  SelectedImageResponseTopicSubmissions.fromJson(Map<String, dynamic> json) {
    __origJson = json;
    people = (json['people'] != null)
        ? SelectedImageResponseTopicSubmissionsPeople.fromJson(json['people'])
        : null;
    theHolidays = (json['the-holidays'] != null)
        ? SelectedImageResponseTopicSubmissionsTheHolidays.fromJson(
            json['the-holidays'])
        : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (people != null) {
      data['people'] = people!.toJson();
    }
    if (theHolidays != null) {
      data['the-holidays'] = theHolidays!.toJson();
    }
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}

class SelectedImageResponseLinks {
/*
{
  "self": "https://api.unsplash.com/photos/a-woman-holding-a-sparkler-in-her-hands-_ii9QgxF4kQ",
  "html": "https://unsplash.com/photos/a-woman-holding-a-sparkler-in-her-hands-_ii9QgxF4kQ",
  "download": "https://unsplash.com/photos/_ii9QgxF4kQ/download?ixid=M3wxNzg5Mjl8MHwxfGFsbHx8fHx8fHx8fDE3MDIxOTgwMzF8",
  "download_location": "https://api.unsplash.com/photos/_ii9QgxF4kQ/download?ixid=M3wxNzg5Mjl8MHwxfGFsbHx8fHx8fHx8fDE3MDIxOTgwMzF8"
} 
*/

  String? self;
  String? html;
  String? download;
  String? downloadLocation;
  Map<String, dynamic> __origJson = {};

  SelectedImageResponseLinks({
    this.self,
    this.html,
    this.download,
    this.downloadLocation,
  });
  SelectedImageResponseLinks.fromJson(Map<String, dynamic> json) {
    __origJson = json;
    self = json['self']?.toString();
    html = json['html']?.toString();
    download = json['download']?.toString();
    downloadLocation = json['download_location']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['self'] = self;
    data['html'] = html;
    data['download'] = download;
    data['download_location'] = downloadLocation;
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}

class SelectedImageResponseUrls {
/*
{
  "raw": "https://images.unsplash.com/photo-1641155785005-592529a4391d?ixid=M3wxNzg5Mjl8MHwxfGFsbHx8fHx8fHx8fDE3MDIxOTgwMzF8&ixlib=rb-4.0.3",
  "full": "https://images.unsplash.com/photo-1641155785005-592529a4391d?crop=entropy&cs=srgb&fm=jpg&ixid=M3wxNzg5Mjl8MHwxfGFsbHx8fHx8fHx8fDE3MDIxOTgwMzF8&ixlib=rb-4.0.3&q=85",
  "regular": "https://images.unsplash.com/photo-1641155785005-592529a4391d?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=M3wxNzg5Mjl8MHwxfGFsbHx8fHx8fHx8fDE3MDIxOTgwMzF8&ixlib=rb-4.0.3&q=80&w=1080",
  "small": "https://images.unsplash.com/photo-1641155785005-592529a4391d?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=M3wxNzg5Mjl8MHwxfGFsbHx8fHx8fHx8fDE3MDIxOTgwMzF8&ixlib=rb-4.0.3&q=80&w=400",
  "thumb": "https://images.unsplash.com/photo-1641155785005-592529a4391d?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=M3wxNzg5Mjl8MHwxfGFsbHx8fHx8fHx8fDE3MDIxOTgwMzF8&ixlib=rb-4.0.3&q=80&w=200",
  "small_s3": "https://s3.us-west-2.amazonaws.com/images.unsplash.com/small/photo-1641155785005-592529a4391d"
} 
*/

  String? raw;
  String? full;
  String? regular;
  String? small;
  String? thumb;
  String? smallS3;
  Map<String, dynamic> __origJson = {};

  SelectedImageResponseUrls({
    this.raw,
    this.full,
    this.regular,
    this.small,
    this.thumb,
    this.smallS3,
  });
  SelectedImageResponseUrls.fromJson(Map<String, dynamic> json) {
    __origJson = json;
    raw = json['raw']?.toString();
    full = json['full']?.toString();
    regular = json['regular']?.toString();
    small = json['small']?.toString();
    thumb = json['thumb']?.toString();
    smallS3 = json['small_s3']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['raw'] = raw;
    data['full'] = full;
    data['regular'] = regular;
    data['small'] = small;
    data['thumb'] = thumb;
    data['small_s3'] = smallS3;
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}

class SelectedImageResponse {
/*
{
  "id": "_ii9QgxF4kQ",
  "slug": "a-woman-holding-a-sparkler-in-her-hands-_ii9QgxF4kQ",
  "created_at": "2022-01-02T20:36:38Z",
  "updated_at": "2023-12-10T02:29:14Z",
  "promoted_at": "2022-01-04T05:16:01Z",
  "width": 4480,
  "height": 6720,
  "color": "#d9d9d9",
  "blur_hash": "LgKeJ{kCtRoz_4axofj[%MfkMxae",
  "description": "null",
  "alt_description": "a woman holding a sparkler in her hands",
  "breadcrumbs": [
    ""
  ],
  "urls": {
    "raw": "https://images.unsplash.com/photo-1641155785005-592529a4391d?ixid=M3wxNzg5Mjl8MHwxfGFsbHx8fHx8fHx8fDE3MDIxOTgwMzF8&ixlib=rb-4.0.3",
    "full": "https://images.unsplash.com/photo-1641155785005-592529a4391d?crop=entropy&cs=srgb&fm=jpg&ixid=M3wxNzg5Mjl8MHwxfGFsbHx8fHx8fHx8fDE3MDIxOTgwMzF8&ixlib=rb-4.0.3&q=85",
    "regular": "https://images.unsplash.com/photo-1641155785005-592529a4391d?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=M3wxNzg5Mjl8MHwxfGFsbHx8fHx8fHx8fDE3MDIxOTgwMzF8&ixlib=rb-4.0.3&q=80&w=1080",
    "small": "https://images.unsplash.com/photo-1641155785005-592529a4391d?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=M3wxNzg5Mjl8MHwxfGFsbHx8fHx8fHx8fDE3MDIxOTgwMzF8&ixlib=rb-4.0.3&q=80&w=400",
    "thumb": "https://images.unsplash.com/photo-1641155785005-592529a4391d?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=M3wxNzg5Mjl8MHwxfGFsbHx8fHx8fHx8fDE3MDIxOTgwMzF8&ixlib=rb-4.0.3&q=80&w=200",
    "small_s3": "https://s3.us-west-2.amazonaws.com/images.unsplash.com/small/photo-1641155785005-592529a4391d"
  },
  "links": {
    "self": "https://api.unsplash.com/photos/a-woman-holding-a-sparkler-in-her-hands-_ii9QgxF4kQ",
    "html": "https://unsplash.com/photos/a-woman-holding-a-sparkler-in-her-hands-_ii9QgxF4kQ",
    "download": "https://unsplash.com/photos/_ii9QgxF4kQ/download?ixid=M3wxNzg5Mjl8MHwxfGFsbHx8fHx8fHx8fDE3MDIxOTgwMzF8",
    "download_location": "https://api.unsplash.com/photos/_ii9QgxF4kQ/download?ixid=M3wxNzg5Mjl8MHwxfGFsbHx8fHx8fHx8fDE3MDIxOTgwMzF8"
  },
  "likes": 89,
  "liked_by_user": false,
  "current_user_collections": [
    ""
  ],
  "sponsorship": "null",
  "topic_submissions": {
    "people": {
      "status": "approved",
      "approved_on": "2023-12-08T19:21:32Z"
    },
    "the-holidays": {
      "status": "approved",
      "approved_on": "2023-12-08T19:21:38Z"
    }
  },
  "user": {
    "id": "N4NQrNsllDs",
    "updated_at": "2023-11-13T14:14:11Z",
    "username": "majestical_jasmin",
    "name": "Jasmin Chew",
    "first_name": "Jasmin",
    "last_name": "Chew",
    "twitter_username": "null",
    "portfolio_url": "http://jasminchew.com",
    "bio": "IG: @majestical_jazz\r\njasminchewphoto@gmail.com   I www.jasminchew.com",
    "location": "Toronto, Ontario ",
    "links": {
      "self": "https://api.unsplash.com/users/majestical_jasmin",
      "html": "https://unsplash.com/@majestical_jasmin",
      "photos": "https://api.unsplash.com/users/majestical_jasmin/photos",
      "likes": "https://api.unsplash.com/users/majestical_jasmin/likes",
      "portfolio": "https://api.unsplash.com/users/majestical_jasmin/portfolio",
      "following": "https://api.unsplash.com/users/majestical_jasmin/following",
      "followers": "https://api.unsplash.com/users/majestical_jasmin/followers"
    },
    "profile_image": {
      "small": "https://images.unsplash.com/profile-1629930000752-cf2b8a41d392image?ixlib=rb-4.0.3&crop=faces&fit=crop&w=32&h=32",
      "medium": "https://images.unsplash.com/profile-1629930000752-cf2b8a41d392image?ixlib=rb-4.0.3&crop=faces&fit=crop&w=64&h=64",
      "large": "https://images.unsplash.com/profile-1629930000752-cf2b8a41d392image?ixlib=rb-4.0.3&crop=faces&fit=crop&w=128&h=128"
    },
    "instagram_username": "majestical_jazz",
    "total_collections": 0,
    "total_likes": 123,
    "total_photos": 805,
    "total_promoted_photos": 288,
    "accepted_tos": true,
    "for_hire": true,
    "social": {
      "instagram_username": "majestical_jazz",
      "portfolio_url": "http://jasminchew.com",
      "twitter_username": "null",
      "paypal_email": "null"
    }
  },
  "exif": {
    "make": "null",
    "model": "null",
    "name": "null",
    "exposure_time": "null",
    "aperture": "null",
    "focal_length": "null",
    "iso": "null"
  },
  "location": {
    "name": "null",
    "city": "null",
    "country": "null",
    "position": {
      "latitude": "null",
      "longitude": "null"
    }
  },
  "meta": {
    "index": true
  },
  "public_domain": false,
  "tags": [
    {
      "type": "search",
      "title": "clothing"
    }
  ],
  "tags_preview": [
    {
      "type": "search",
      "title": "clothing"
    }
  ],
  "views": 606102,
  "downloads": 2293,
  "topics": [
    {
      "id": "towJZFskpGg",
      "title": "People",
      "slug": "people",
      "visibility": "featured"
    }
  ],
  "related_collections": {
    "total": 3,
    "type": "related",
    "results": [
      {
        "id": "9673872",
        "title": "We",
        "description": "null",
        "published_at": "2020-03-10T02:08:10Z",
        "last_collected_at": "2023-11-30T08:55:42Z",
        "updated_at": "2023-11-30T09:06:07Z",
        "featured": false,
        "total_photos": 3855,
        "private": false,
        "share_key": "5056ea9eef3ab3ec872efefcd60a0edc",
        "tags": [
          {
            "type": "search",
            "title": "we"
          }
        ],
        "links": {
          "self": "https://api.unsplash.com/collections/9673872",
          "html": "https://unsplash.com/collections/9673872/we-the-people",
          "photos": "https://api.unsplash.com/collections/9673872/photos",
          "related": "https://api.unsplash.com/collections/9673872/related"
        },
        "user": {
          "id": "cjMI8Jp6VEc",
          "updated_at": "2023-11-25T15:06:28Z",
          "username": "andallthings",
          "name": "ethan",
          "first_name": "ethan",
          "last_name": "null",
          "twitter_username": "maybeScept3r",
          "portfolio_url": "https://linktr.ee/scept3rdoesstuff",
          "bio": "phone photographer · anime-lover · cosplayer · front-end coder",
          "location": "null",
          "links": {
            "self": "https://api.unsplash.com/users/andallthings",
            "html": "https://unsplash.com/@andallthings",
            "photos": "https://api.unsplash.com/users/andallthings/photos",
            "likes": "https://api.unsplash.com/users/andallthings/likes",
            "portfolio": "https://api.unsplash.com/users/andallthings/portfolio",
            "following": "https://api.unsplash.com/users/andallthings/following",
            "followers": "https://api.unsplash.com/users/andallthings/followers"
          },
          "profile_image": {
            "small": "https://images.unsplash.com/profile-1629697199247-088ad95ac733image?ixlib=rb-4.0.3&crop=faces&fit=crop&w=32&h=32",
            "medium": "https://images.unsplash.com/profile-1629697199247-088ad95ac733image?ixlib=rb-4.0.3&crop=faces&fit=crop&w=64&h=64",
            "large": "https://images.unsplash.com/profile-1629697199247-088ad95ac733image?ixlib=rb-4.0.3&crop=faces&fit=crop&w=128&h=128"
          },
          "instagram_username": "null",
          "total_collections": 9,
          "total_likes": 13403,
          "total_photos": 118,
          "total_promoted_photos": 0,
          "accepted_tos": true,
          "for_hire": false,
          "social": {
            "instagram_username": "null",
            "portfolio_url": "https://linktr.ee/scept3rdoesstuff",
            "twitter_username": "maybeScept3r",
            "paypal_email": "null"
          }
        },
        "cover_photo": {
          "id": "GVpDJvR9wGI",
          "slug": "a-woman-with-long-hair-and-red-glasses-GVpDJvR9wGI",
          "created_at": "2023-11-21T22:19:30Z",
          "updated_at": "2023-12-08T00:24:06Z",
          "promoted_at": "2023-11-24T07:48:01Z",
          "width": 4160,
          "height": 5824,
          "color": "#260c0c",
          "blur_hash": "LF7wZ+j[0eae?GfR9aayNHWVs:of",
          "description": "null",
          "alt_description": "a woman with long hair and red glasses",
          "breadcrumbs": [
            ""
          ],
          "urls": {
            "raw": "https://images.unsplash.com/photo-1700605149722-50c0d7fe003d?ixlib=rb-4.0.3",
            "full": "https://images.unsplash.com/photo-1700605149722-50c0d7fe003d?ixlib=rb-4.0.3&q=85&fm=jpg&crop=entropy&cs=srgb",
            "regular": "https://images.unsplash.com/photo-1700605149722-50c0d7fe003d?ixlib=rb-4.0.3&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max",
            "small": "https://images.unsplash.com/photo-1700605149722-50c0d7fe003d?ixlib=rb-4.0.3&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=400&fit=max",
            "thumb": "https://images.unsplash.com/photo-1700605149722-50c0d7fe003d?ixlib=rb-4.0.3&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=200&fit=max",
            "small_s3": "https://s3.us-west-2.amazonaws.com/images.unsplash.com/small/photo-1700605149722-50c0d7fe003d"
          },
          "links": {
            "self": "https://api.unsplash.com/photos/a-woman-with-long-hair-and-red-glasses-GVpDJvR9wGI",
            "html": "https://unsplash.com/photos/a-woman-with-long-hair-and-red-glasses-GVpDJvR9wGI",
            "download": "https://unsplash.com/photos/GVpDJvR9wGI/download",
            "download_location": "https://api.unsplash.com/photos/GVpDJvR9wGI/download"
          },
          "likes": 84,
          "liked_by_user": false,
          "current_user_collections": [
            ""
          ],
          "sponsorship": "null",
          "topic_submissions": {
            "fashion-beauty": {
              "status": "approved",
              "approved_on": "2023-11-24T10:20:55Z"
            }
          },
          "user": {
            "id": "XhDgsEZoUlA",
            "updated_at": "2023-12-06T01:22:29Z",
            "username": "ylvlso",
            "name": "uliana soboleva",
            "first_name": "uliana",
            "last_name": "soboleva",
            "twitter_username": "null",
            "portfolio_url": "null",
            "bio": "null",
            "location": "null",
            "links": {
              "self": "https://api.unsplash.com/users/ylvlso",
              "html": "https://unsplash.com/@ylvlso",
              "photos": "https://api.unsplash.com/users/ylvlso/photos",
              "likes": "https://api.unsplash.com/users/ylvlso/likes",
              "portfolio": "https://api.unsplash.com/users/ylvlso/portfolio",
              "following": "https://api.unsplash.com/users/ylvlso/following",
              "followers": "https://api.unsplash.com/users/ylvlso/followers"
            },
            "profile_image": {
              "small": "https://images.unsplash.com/profile-1670961867620-30bf72c02888?ixlib=rb-4.0.3&crop=faces&fit=crop&w=32&h=32",
              "medium": "https://images.unsplash.com/profile-1670961867620-30bf72c02888?ixlib=rb-4.0.3&crop=faces&fit=crop&w=64&h=64",
              "large": "https://images.unsplash.com/profile-1670961867620-30bf72c02888?ixlib=rb-4.0.3&crop=faces&fit=crop&w=128&h=128"
            },
            "instagram_username": "null",
            "total_collections": 0,
            "total_likes": 39,
            "total_photos": 68,
            "total_promoted_photos": 5,
            "accepted_tos": true,
            "for_hire": false,
            "social": {
              "instagram_username": "null",
              "portfolio_url": "null",
              "twitter_username": "null",
              "paypal_email": "null"
            }
          }
        },
        "preview_photos": [
          {
            "id": "GVpDJvR9wGI",
            "slug": "a-woman-with-long-hair-and-red-glasses-GVpDJvR9wGI",
            "created_at": "2023-11-21T22:19:30Z",
            "updated_at": "2023-12-08T00:24:06Z",
            "blur_hash": "LF7wZ+j[0eae?GfR9aayNHWVs:of",
            "urls": {
              "raw": "https://images.unsplash.com/photo-1700605149722-50c0d7fe003d?ixlib=rb-4.0.3",
              "full": "https://images.unsplash.com/photo-1700605149722-50c0d7fe003d?ixlib=rb-4.0.3&q=85&fm=jpg&crop=entropy&cs=srgb",
              "regular": "https://images.unsplash.com/photo-1700605149722-50c0d7fe003d?ixlib=rb-4.0.3&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max",
              "small": "https://images.unsplash.com/photo-1700605149722-50c0d7fe003d?ixlib=rb-4.0.3&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=400&fit=max",
              "thumb": "https://images.unsplash.com/photo-1700605149722-50c0d7fe003d?ixlib=rb-4.0.3&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=200&fit=max",
              "small_s3": "https://s3.us-west-2.amazonaws.com/images.unsplash.com/small/photo-1700605149722-50c0d7fe003d"
            }
          }
        ]
      }
    ]
  }
} 
*/

  String? id;
  String? slug;
  String? createdAt;
  String? updatedAt;
  String? promotedAt;
  int? width;
  int? height;
  String? color;
  String? blurHash;
  String? description;
  String? altDescription;
  List<String?>? breadcrumbs;
  SelectedImageResponseUrls? urls;
  SelectedImageResponseLinks? links;
  int? likes;
  bool? likedByUser;
  List<String?>? currentUserCollections;
  String? sponsorship;
  SelectedImageResponseTopicSubmissions? topicSubmissions;
  SelectedImageResponseUser? user;
  SelectedImageResponseExif? exif;
  SelectedImageResponseLocation? location;
  SelectedImageResponseMeta? meta;
  bool? publicDomain;
  List<SelectedImageResponseTags?>? tags;
  List<SelectedImageResponseTagsPreview?>? tagsPreview;
  int? views;
  int? downloads;
  List<SelectedImageResponseTopics?>? topics;
  SelectedImageResponseRelatedCollections? relatedCollections;
  Map<String, dynamic> __origJson = {};

  SelectedImageResponse({
    this.id,
    this.slug,
    this.createdAt,
    this.updatedAt,
    this.promotedAt,
    this.width,
    this.height,
    this.color,
    this.blurHash,
    this.description,
    this.altDescription,
    this.breadcrumbs,
    this.urls,
    this.links,
    this.likes,
    this.likedByUser,
    this.currentUserCollections,
    this.sponsorship,
    this.topicSubmissions,
    this.user,
    this.exif,
    this.location,
    this.meta,
    this.publicDomain,
    this.tags,
    this.tagsPreview,
    this.views,
    this.downloads,
    this.topics,
    this.relatedCollections,
  });
  SelectedImageResponse.fromJson(Map<String, dynamic> json) {
    __origJson = json;
    id = json['id']?.toString();
    slug = json['slug']?.toString();
    createdAt = json['created_at']?.toString();
    updatedAt = json['updated_at']?.toString();
    promotedAt = json['promoted_at']?.toString();
    width = json['width']?.toInt();
    height = json['height']?.toInt();
    color = json['color']?.toString();
    blurHash = json['blur_hash']?.toString();
    description = json['description']?.toString();
    altDescription = json['alt_description']?.toString();
    if (json['breadcrumbs'] != null) {
      final v = json['breadcrumbs'];
      final arr0 = <String>[];
      v.forEach((v) {
        arr0.add(v.toString());
      });
      breadcrumbs = arr0;
    }
    urls = (json['urls'] != null)
        ? SelectedImageResponseUrls.fromJson(json['urls'])
        : null;
    links = (json['links'] != null)
        ? SelectedImageResponseLinks.fromJson(json['links'])
        : null;
    likes = json['likes']?.toInt();
    likedByUser = json['liked_by_user'];
    if (json['current_user_collections'] != null) {
      final v = json['current_user_collections'];
      final arr0 = <String>[];
      v.forEach((v) {
        arr0.add(v.toString());
      });
      currentUserCollections = arr0;
    }
    sponsorship = json['sponsorship']?.toString();
    topicSubmissions = (json['topic_submissions'] != null)
        ? SelectedImageResponseTopicSubmissions.fromJson(
            json['topic_submissions'])
        : null;
    user = (json['user'] != null)
        ? SelectedImageResponseUser.fromJson(json['user'])
        : null;
    exif = (json['exif'] != null)
        ? SelectedImageResponseExif.fromJson(json['exif'])
        : null;
    location = (json['location'] != null)
        ? SelectedImageResponseLocation.fromJson(json['location'])
        : null;
    meta = (json['meta'] != null)
        ? SelectedImageResponseMeta.fromJson(json['meta'])
        : null;
    publicDomain = json['public_domain'];
    if (json['tags'] != null) {
      final v = json['tags'];
      final arr0 = <SelectedImageResponseTags>[];
      v.forEach((v) {
        arr0.add(SelectedImageResponseTags.fromJson(v));
      });
      tags = arr0;
    }
    if (json['tags_preview'] != null) {
      final v = json['tags_preview'];
      final arr0 = <SelectedImageResponseTagsPreview>[];
      v.forEach((v) {
        arr0.add(SelectedImageResponseTagsPreview.fromJson(v));
      });
      tagsPreview = arr0;
    }
    views = json['views']?.toInt();
    downloads = json['downloads']?.toInt();
    if (json['topics'] != null) {
      final v = json['topics'];
      final arr0 = <SelectedImageResponseTopics>[];
      v.forEach((v) {
        arr0.add(SelectedImageResponseTopics.fromJson(v));
      });
      topics = arr0;
    }
    relatedCollections = (json['related_collections'] != null)
        ? SelectedImageResponseRelatedCollections.fromJson(
            json['related_collections'])
        : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['slug'] = slug;
    data['created_at'] = createdAt;
    data['updated_at'] = updatedAt;
    data['promoted_at'] = promotedAt;
    data['width'] = width;
    data['height'] = height;
    data['color'] = color;
    data['blur_hash'] = blurHash;
    data['description'] = description;
    data['alt_description'] = altDescription;
    if (breadcrumbs != null) {
      final v = breadcrumbs;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['breadcrumbs'] = arr0;
    }
    if (urls != null) {
      data['urls'] = urls!.toJson();
    }
    if (links != null) {
      data['links'] = links!.toJson();
    }
    data['likes'] = likes;
    data['liked_by_user'] = likedByUser;
    if (currentUserCollections != null) {
      final v = currentUserCollections;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['current_user_collections'] = arr0;
    }
    data['sponsorship'] = sponsorship;
    if (topicSubmissions != null) {
      data['topic_submissions'] = topicSubmissions!.toJson();
    }
    if (user != null) {
      data['user'] = user!.toJson();
    }
    if (exif != null) {
      data['exif'] = exif!.toJson();
    }
    if (location != null) {
      data['location'] = location!.toJson();
    }
    if (meta != null) {
      data['meta'] = meta!.toJson();
    }
    data['public_domain'] = publicDomain;
    if (tags != null) {
      final v = tags;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['tags'] = arr0;
    }
    if (tagsPreview != null) {
      final v = tagsPreview;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['tags_preview'] = arr0;
    }
    data['views'] = views;
    data['downloads'] = downloads;
    if (topics != null) {
      final v = topics;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['topics'] = arr0;
    }
    if (relatedCollections != null) {
      data['related_collections'] = relatedCollections!.toJson();
    }
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}
