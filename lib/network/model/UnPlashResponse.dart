///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class UnsplashResponseUserSocial {
/*
{
  "instagram_username": "anca.zosin",
  "portfolio_url": "",
  "twitter_username": "",
  "paypal_email": ""
} 
*/

  String? instagramUsername;
  String? portfolioUrl;
  String? twitterUsername;
  String? paypalEmail;
  Map<String, dynamic> __origJson = {};

  UnsplashResponseUserSocial({
    this.instagramUsername,
    this.portfolioUrl,
    this.twitterUsername,
    this.paypalEmail,
  });
  UnsplashResponseUserSocial.fromJson(Map<String, dynamic> json) {
    __origJson = json;
    instagramUsername = json['instagram_username']?.toString();
    portfolioUrl = json['portfolio_url']?.toString();
    twitterUsername = json['twitter_username']?.toString();
    paypalEmail = json['paypal_email']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['instagram_username'] = instagramUsername;
    data['portfolio_url'] = portfolioUrl;
    data['twitter_username'] = twitterUsername;
    data['paypal_email'] = paypalEmail;
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}

class UnsplashResponseUserProfileImage {
/*
{
  "small": "https://images.unsplash.com/profile-1647193715096-585c3def2c5eimage?ixlib=rb-4.0.3&crop=faces&fit=crop&w=32&h=32",
  "medium": "https://images.unsplash.com/profile-1647193715096-585c3def2c5eimage?ixlib=rb-4.0.3&crop=faces&fit=crop&w=64&h=64",
  "large": "https://images.unsplash.com/profile-1647193715096-585c3def2c5eimage?ixlib=rb-4.0.3&crop=faces&fit=crop&w=128&h=128"
} 
*/

  String? small;
  String? medium;
  String? large;
  Map<String, dynamic> __origJson = {};

  UnsplashResponseUserProfileImage({
    this.small,
    this.medium,
    this.large,
  });
  UnsplashResponseUserProfileImage.fromJson(Map<String, dynamic> json) {
    __origJson = json;
    small = json['small']?.toString();
    medium = json['medium']?.toString();
    large = json['large']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['small'] = small;
    data['medium'] = medium;
    data['large'] = large;
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}

class UnsplashResponseUserLinks {
/*
{
  "self": "https://api.unsplash.com/users/agzed",
  "html": "https://unsplash.com/@agzed",
  "photos": "https://api.unsplash.com/users/agzed/photos",
  "likes": "https://api.unsplash.com/users/agzed/likes",
  "portfolio": "https://api.unsplash.com/users/agzed/portfolio",
  "following": "https://api.unsplash.com/users/agzed/following",
  "followers": "https://api.unsplash.com/users/agzed/followers"
} 
*/

  String? self;
  String? html;
  String? photos;
  String? likes;
  String? portfolio;
  String? following;
  String? followers;
  Map<String, dynamic> __origJson = {};

  UnsplashResponseUserLinks({
    this.self,
    this.html,
    this.photos,
    this.likes,
    this.portfolio,
    this.following,
    this.followers,
  });
  UnsplashResponseUserLinks.fromJson(Map<String, dynamic> json) {
    __origJson = json;
    self = json['self']?.toString();
    html = json['html']?.toString();
    photos = json['photos']?.toString();
    likes = json['likes']?.toString();
    portfolio = json['portfolio']?.toString();
    following = json['following']?.toString();
    followers = json['followers']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['self'] = self;
    data['html'] = html;
    data['photos'] = photos;
    data['likes'] = likes;
    data['portfolio'] = portfolio;
    data['following'] = following;
    data['followers'] = followers;
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}

class UnsplashResponseUser {
/*
{
  "id": "9dNyjpFYhUI",
  "updated_at": "2023-04-30T13:05:39Z",
  "username": "agzed",
  "name": "Anca Gabriela Zosin",
  "first_name": "Anca Gabriela",
  "last_name": "Zosin",
  "twitter_username": "",
  "portfolio_url": "",
  "bio": "I create meaningful experiences through design and photography. You are welcome to credit me by simply writing my name or tag me on Instagram below â¬‡",
  "location": "",
  "links": {
    "self": "https://api.unsplash.com/users/agzed",
    "html": "https://unsplash.com/@agzed",
    "photos": "https://api.unsplash.com/users/agzed/photos",
    "likes": "https://api.unsplash.com/users/agzed/likes",
    "portfolio": "https://api.unsplash.com/users/agzed/portfolio",
    "following": "https://api.unsplash.com/users/agzed/following",
    "followers": "https://api.unsplash.com/users/agzed/followers"
  },
  "profile_image": {
    "small": "https://images.unsplash.com/profile-1647193715096-585c3def2c5eimage?ixlib=rb-4.0.3&crop=faces&fit=crop&w=32&h=32",
    "medium": "https://images.unsplash.com/profile-1647193715096-585c3def2c5eimage?ixlib=rb-4.0.3&crop=faces&fit=crop&w=64&h=64",
    "large": "https://images.unsplash.com/profile-1647193715096-585c3def2c5eimage?ixlib=rb-4.0.3&crop=faces&fit=crop&w=128&h=128"
  },
  "instagram_username": "anca.zosin",
  "total_collections": 2,
  "total_likes": 55,
  "total_photos": 168,
  "accepted_tos": true,
  "for_hire": false,
  "social": {
    "instagram_username": "anca.zosin",
    "portfolio_url": "",
    "twitter_username": "",
    "paypal_email": ""
  }
} 
*/

  String? id;
  String? updatedAt;
  String? username;
  String? name;
  String? firstName;
  String? lastName;
  String? twitterUsername;
  String? portfolioUrl;
  String? bio;
  String? location;
  UnsplashResponseUserLinks? links;
  UnsplashResponseUserProfileImage? profileImage;
  String? instagramUsername;
  int? totalCollections;
  int? totalLikes;
  int? totalPhotos;
  bool? acceptedTos;
  bool? forHire;
  UnsplashResponseUserSocial? social;
  Map<String, dynamic> __origJson = {};

  UnsplashResponseUser({
    this.id,
    this.updatedAt,
    this.username,
    this.name,
    this.firstName,
    this.lastName,
    this.twitterUsername,
    this.portfolioUrl,
    this.bio,
    this.location,
    this.links,
    this.profileImage,
    this.instagramUsername,
    this.totalCollections,
    this.totalLikes,
    this.totalPhotos,
    this.acceptedTos,
    this.forHire,
    this.social,
  });
  UnsplashResponseUser.fromJson(Map<String, dynamic> json) {
    __origJson = json;
    id = json['id']?.toString();
    updatedAt = json['updated_at']?.toString();
    username = json['username']?.toString();
    name = json['name']?.toString();
    firstName = json['first_name']?.toString();
    lastName = json['last_name']?.toString();
    twitterUsername = json['twitter_username']?.toString();
    portfolioUrl = json['portfolio_url']?.toString();
    bio = json['bio']?.toString();
    location = json['location']?.toString();
    links = (json['links'] != null)
        ? UnsplashResponseUserLinks.fromJson(json['links'])
        : null;
    profileImage = (json['profile_image'] != null)
        ? UnsplashResponseUserProfileImage.fromJson(json['profile_image'])
        : null;
    instagramUsername = json['instagram_username']?.toString();
    totalCollections = json['total_collections']?.toInt();
    totalLikes = json['total_likes']?.toInt();
    totalPhotos = json['total_photos']?.toInt();
    acceptedTos = json['accepted_tos'];
    forHire = json['for_hire'];
    social = (json['social'] != null)
        ? UnsplashResponseUserSocial.fromJson(json['social'])
        : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['updated_at'] = updatedAt;
    data['username'] = username;
    data['name'] = name;
    data['first_name'] = firstName;
    data['last_name'] = lastName;
    data['twitter_username'] = twitterUsername;
    data['portfolio_url'] = portfolioUrl;
    data['bio'] = bio;
    data['location'] = location;
    if (links != null) {
      data['links'] = links!.toJson();
    }
    if (profileImage != null) {
      data['profile_image'] = profileImage!.toJson();
    }
    data['instagram_username'] = instagramUsername;
    data['total_collections'] = totalCollections;
    data['total_likes'] = totalLikes;
    data['total_photos'] = totalPhotos;
    data['accepted_tos'] = acceptedTos;
    data['for_hire'] = forHire;
    if (social != null) {
      data['social'] = social!.toJson();
    }
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}

// class UnsplashResponseTopicSubmissions {
// /*
// {}
// */

//   Map<String, dynamic> __origJson = {};

//   UnsplashResponseTopicSubmissions({
//   });
//   UnsplashResponseTopicSubmissions.fromJson(Map<String, dynamic> json) {
//     __origJson = json;
//   }
//   Map<String, dynamic> toJson() {
//     final data = <String, dynamic>{};
//     return data;
//   }
//   Map<String, dynamic> origJson() => __origJson;
// }

class UnsplashResponseLinks {
/*
{
  "self": "https://api.unsplash.com/photos/uEUlLf2xsL4",
  "html": "https://unsplash.com/photos/uEUlLf2xsL4",
  "download": "https://unsplash.com/photos/uEUlLf2xsL4/download?ixid=MnwxNzg5Mjl8MHwxfGFsbHwxfHx8fHx8Mnx8MTY4Mjg2MTQ4NA",
  "download_location": "https://api.unsplash.com/photos/uEUlLf2xsL4/download?ixid=MnwxNzg5Mjl8MHwxfGFsbHwxfHx8fHx8Mnx8MTY4Mjg2MTQ4NA"
} 
*/

  String? self;
  String? html;
  String? download;
  String? downloadLocation;
  Map<String, dynamic> __origJson = {};

  UnsplashResponseLinks({
    this.self,
    this.html,
    this.download,
    this.downloadLocation,
  });
  UnsplashResponseLinks.fromJson(Map<String, dynamic> json) {
    __origJson = json;
    self = json['self']?.toString();
    html = json['html']?.toString();
    download = json['download']?.toString();
    downloadLocation = json['download_location']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['self'] = self;
    data['html'] = html;
    data['download'] = download;
    data['download_location'] = downloadLocation;
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}

class UnsplashResponseUrls {
/*
{
  "raw": "https://images.unsplash.com/photo-1682784109052-aa092d1804d2?ixid=MnwxNzg5Mjl8MHwxfGFsbHwxfHx8fHx8Mnx8MTY4Mjg2MTQ4NA&ixlib=rb-4.0.3",
  "full": "https://images.unsplash.com/photo-1682784109052-aa092d1804d2?crop=entropy&cs=srgb&fm=jpg&ixid=MnwxNzg5Mjl8MHwxfGFsbHwxfHx8fHx8Mnx8MTY4Mjg2MTQ4NA&ixlib=rb-4.0.3&q=85",
  "regular": "https://images.unsplash.com/photo-1682784109052-aa092d1804d2?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=MnwxNzg5Mjl8MHwxfGFsbHwxfHx8fHx8Mnx8MTY4Mjg2MTQ4NA&ixlib=rb-4.0.3&q=80&w=1080",
  "small": "https://images.unsplash.com/photo-1682784109052-aa092d1804d2?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=MnwxNzg5Mjl8MHwxfGFsbHwxfHx8fHx8Mnx8MTY4Mjg2MTQ4NA&ixlib=rb-4.0.3&q=80&w=400",
  "thumb": "https://images.unsplash.com/photo-1682784109052-aa092d1804d2?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=MnwxNzg5Mjl8MHwxfGFsbHwxfHx8fHx8Mnx8MTY4Mjg2MTQ4NA&ixlib=rb-4.0.3&q=80&w=200",
  "small_s3": "https://s3.us-west-2.amazonaws.com/images.unsplash.com/small/photo-1682784109052-aa092d1804d2"
} 
*/

  String? raw;
  String? full;
  String? regular;
  String? small;
  String? thumb;
  String? smallS3;
  Map<String, dynamic> __origJson = {};

  UnsplashResponseUrls({
    this.raw,
    this.full,
    this.regular,
    this.small,
    this.thumb,
    this.smallS3,
  });
  UnsplashResponseUrls.fromJson(Map<String, dynamic> json) {
    __origJson = json;
    raw = json['raw']?.toString();
    full = json['full']?.toString();
    regular = json['regular']?.toString();
    small = json['small']?.toString();
    thumb = json['thumb']?.toString();
    smallS3 = json['small_s3']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['raw'] = raw;
    data['full'] = full;
    data['regular'] = regular;
    data['small'] = small;
    data['thumb'] = thumb;
    data['small_s3'] = smallS3;
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}

class UnsplashResponse {
/*
{
  "id": "uEUlLf2xsL4",
  "created_at": "2023-04-29T16:01:54Z",
  "updated_at": "2023-04-30T13:02:37Z",
  "promoted_at": "2023-04-30T13:02:37Z",
  "width": 4000,
  "height": 6000,
  "color": "#594026",
  "blur_hash": "LbGa{}0LV]?a%2IVxtWCIpt7xaM{",
  "description": "Roses are not always red",
  "alt_description": "a single orange rose in a vase on a table",
  "urls": {
    "raw": "https://images.unsplash.com/photo-1682784109052-aa092d1804d2?ixid=MnwxNzg5Mjl8MHwxfGFsbHwxfHx8fHx8Mnx8MTY4Mjg2MTQ4NA&ixlib=rb-4.0.3",
    "full": "https://images.unsplash.com/photo-1682784109052-aa092d1804d2?crop=entropy&cs=srgb&fm=jpg&ixid=MnwxNzg5Mjl8MHwxfGFsbHwxfHx8fHx8Mnx8MTY4Mjg2MTQ4NA&ixlib=rb-4.0.3&q=85",
    "regular": "https://images.unsplash.com/photo-1682784109052-aa092d1804d2?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=MnwxNzg5Mjl8MHwxfGFsbHwxfHx8fHx8Mnx8MTY4Mjg2MTQ4NA&ixlib=rb-4.0.3&q=80&w=1080",
    "small": "https://images.unsplash.com/photo-1682784109052-aa092d1804d2?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=MnwxNzg5Mjl8MHwxfGFsbHwxfHx8fHx8Mnx8MTY4Mjg2MTQ4NA&ixlib=rb-4.0.3&q=80&w=400",
    "thumb": "https://images.unsplash.com/photo-1682784109052-aa092d1804d2?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=MnwxNzg5Mjl8MHwxfGFsbHwxfHx8fHx8Mnx8MTY4Mjg2MTQ4NA&ixlib=rb-4.0.3&q=80&w=200",
    "small_s3": "https://s3.us-west-2.amazonaws.com/images.unsplash.com/small/photo-1682784109052-aa092d1804d2"
  },
  "links": {
    "self": "https://api.unsplash.com/photos/uEUlLf2xsL4",
    "html": "https://unsplash.com/photos/uEUlLf2xsL4",
    "download": "https://unsplash.com/photos/uEUlLf2xsL4/download?ixid=MnwxNzg5Mjl8MHwxfGFsbHwxfHx8fHx8Mnx8MTY4Mjg2MTQ4NA",
    "download_location": "https://api.unsplash.com/photos/uEUlLf2xsL4/download?ixid=MnwxNzg5Mjl8MHwxfGFsbHwxfHx8fHx8Mnx8MTY4Mjg2MTQ4NA"
  },
  "likes": 5,
  "liked_by_user": false,
  "current_user_collections": [
    ""
  ],
  "sponsorship": "",
  "topic_submissions": {},
  "user": {
    "id": "9dNyjpFYhUI",
    "updated_at": "2023-04-30T13:05:39Z",
    "username": "agzed",
    "name": "Anca Gabriela Zosin",
    "first_name": "Anca Gabriela",
    "last_name": "Zosin",
    "twitter_username": "",
    "portfolio_url": "",
    "bio": "I create meaningful experiences through design and photography. You are welcome to credit me by simply writing my name or tag me on Instagram below â¬‡",
    "location": "",
    "links": {
      "self": "https://api.unsplash.com/users/agzed",
      "html": "https://unsplash.com/@agzed",
      "photos": "https://api.unsplash.com/users/agzed/photos",
      "likes": "https://api.unsplash.com/users/agzed/likes",
      "portfolio": "https://api.unsplash.com/users/agzed/portfolio",
      "following": "https://api.unsplash.com/users/agzed/following",
      "followers": "https://api.unsplash.com/users/agzed/followers"
    },
    "profile_image": {
      "small": "https://images.unsplash.com/profile-1647193715096-585c3def2c5eimage?ixlib=rb-4.0.3&crop=faces&fit=crop&w=32&h=32",
      "medium": "https://images.unsplash.com/profile-1647193715096-585c3def2c5eimage?ixlib=rb-4.0.3&crop=faces&fit=crop&w=64&h=64",
      "large": "https://images.unsplash.com/profile-1647193715096-585c3def2c5eimage?ixlib=rb-4.0.3&crop=faces&fit=crop&w=128&h=128"
    },
    "instagram_username": "anca.zosin",
    "total_collections": 2,
    "total_likes": 55,
    "total_photos": 168,
    "accepted_tos": true,
    "for_hire": false,
    "social": {
      "instagram_username": "anca.zosin",
      "portfolio_url": "",
      "twitter_username": "",
      "paypal_email": ""
    }
  }
} 
*/

  String? id;
  String? createdAt;
  String? updatedAt;
  String? promotedAt;
  int? width;
  int? height;
  String? color;
  String? blurHash;
  String? description;
  String? altDescription;
  UnsplashResponseUrls? urls;
  UnsplashResponseLinks? links;
  int? likes;
  bool? likedByUser;
  List<String?>? currentUserCollections;
  String? sponsorship;
  // UnsplashResponseTopicSubmissions? topicSubmissions;
  UnsplashResponseUser? user;
  Map<String, dynamic> __origJson = {};

  UnsplashResponse({
    this.id,
    this.createdAt,
    this.updatedAt,
    this.promotedAt,
    this.width,
    this.height,
    this.color,
    this.blurHash,
    this.description,
    this.altDescription,
    this.urls,
    this.links,
    this.likes,
    this.likedByUser,
    this.currentUserCollections,
    this.sponsorship,
    // this.topicSubmissions,
    this.user,
  });
  UnsplashResponse.fromJson(Map<String, dynamic> json) {
    __origJson = json;
    id = json['id']?.toString();
    createdAt = json['created_at']?.toString();
    updatedAt = json['updated_at']?.toString();
    promotedAt = json['promoted_at']?.toString();
    width = json['width']?.toInt();
    height = json['height']?.toInt();
    color = json['color']?.toString();
    blurHash = json['blur_hash']?.toString();
    description = json['description']?.toString();
    altDescription = json['alt_description']?.toString();
    urls = (json['urls'] != null)
        ? UnsplashResponseUrls.fromJson(json['urls'])
        : null;
    links = (json['links'] != null)
        ? UnsplashResponseLinks.fromJson(json['links'])
        : null;
    likes = json['likes']?.toInt();
    likedByUser = json['liked_by_user'];
    if (json['current_user_collections'] != null) {
      final v = json['current_user_collections'];
      final arr0 = <String>[];
      v.forEach((v) {
        arr0.add(v.toString());
      });
      currentUserCollections = arr0;
    }
    sponsorship = json['sponsorship']?.toString();
    // topicSubmissions = (json['topic_submissions'] != null) ? UnsplashResponseTopicSubmissions.fromJson(json['topic_submissions']) : null;
    user = (json['user'] != null)
        ? UnsplashResponseUser.fromJson(json['user'])
        : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['created_at'] = createdAt;
    data['updated_at'] = updatedAt;
    data['promoted_at'] = promotedAt;
    data['width'] = width;
    data['height'] = height;
    data['color'] = color;
    data['blur_hash'] = blurHash;
    data['description'] = description;
    data['alt_description'] = altDescription;
    if (urls != null) {
      data['urls'] = urls!.toJson();
    }
    if (links != null) {
      data['links'] = links!.toJson();
    }
    data['likes'] = likes;
    data['liked_by_user'] = likedByUser;
    if (currentUserCollections != null) {
      final v = currentUserCollections;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['current_user_collections'] = arr0;
    }
    data['sponsorship'] = sponsorship;
    // if (topicSubmissions != null) {
    //   data['topic_submissions'] = topicSubmissions!.toJson();
    // }
    if (user != null) {
      data['user'] = user!.toJson();
    }
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}
