///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class TopicsPreviewPhotosUrls {
/*
{
  "raw": "https://images.unsplash.com/photo-1681355296680-30dd86fd0174?ixlib=rb-4.0.3",
  "full": "https://images.unsplash.com/photo-1681355296680-30dd86fd0174?ixlib=rb-4.0.3&q=85&fm=jpg&crop=entropy&cs=srgb",
  "regular": "https://images.unsplash.com/photo-1681355296680-30dd86fd0174?ixlib=rb-4.0.3&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max",
  "small": "https://images.unsplash.com/photo-1681355296680-30dd86fd0174?ixlib=rb-4.0.3&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=400&fit=max",
  "thumb": "https://images.unsplash.com/photo-1681355296680-30dd86fd0174?ixlib=rb-4.0.3&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=200&fit=max",
  "small_s3": "https://s3.us-west-2.amazonaws.com/images.unsplash.com/small/photo-1681355296680-30dd86fd0174"
} 
*/

  String? raw;
  String? full;
  String? regular;
  String? small;
  String? thumb;
  String? smallS3;
  Map<String, dynamic> __origJson = {};

  TopicsPreviewPhotosUrls({
    this.raw,
    this.full,
    this.regular,
    this.small,
    this.thumb,
    this.smallS3,
  });
  TopicsPreviewPhotosUrls.fromJson(Map<String, dynamic> json) {
    __origJson = json;
    raw = json['raw']?.toString();
    full = json['full']?.toString();
    regular = json['regular']?.toString();
    small = json['small']?.toString();
    thumb = json['thumb']?.toString();
    smallS3 = json['small_s3']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['raw'] = raw;
    data['full'] = full;
    data['regular'] = regular;
    data['small'] = small;
    data['thumb'] = thumb;
    data['small_s3'] = smallS3;
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}

class TopicsPreviewPhotos {
/*
{
  "id": "1_k5t7KUKBY",
  "slug": "1_k5t7KUKBY",
  "created_at": "2023-04-13T03:10:26Z",
  "updated_at": "2023-05-06T08:37:08Z",
  "blur_hash": "LCB37@0eV{=zHD+aShOs?cIoW-tl",
  "urls": {
    "raw": "https://images.unsplash.com/photo-1681355296680-30dd86fd0174?ixlib=rb-4.0.3",
    "full": "https://images.unsplash.com/photo-1681355296680-30dd86fd0174?ixlib=rb-4.0.3&q=85&fm=jpg&crop=entropy&cs=srgb",
    "regular": "https://images.unsplash.com/photo-1681355296680-30dd86fd0174?ixlib=rb-4.0.3&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max",
    "small": "https://images.unsplash.com/photo-1681355296680-30dd86fd0174?ixlib=rb-4.0.3&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=400&fit=max",
    "thumb": "https://images.unsplash.com/photo-1681355296680-30dd86fd0174?ixlib=rb-4.0.3&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=200&fit=max",
    "small_s3": "https://s3.us-west-2.amazonaws.com/images.unsplash.com/small/photo-1681355296680-30dd86fd0174"
  }
} 
*/

  String? id;
  String? slug;
  String? createdAt;
  String? updatedAt;
  String? blurHash;
  TopicsPreviewPhotosUrls? urls;
  Map<String, dynamic> __origJson = {};

  TopicsPreviewPhotos({
    this.id,
    this.slug,
    this.createdAt,
    this.updatedAt,
    this.blurHash,
    this.urls,
  });
  TopicsPreviewPhotos.fromJson(Map<String, dynamic> json) {
    __origJson = json;
    id = json['id']?.toString();
    slug = json['slug']?.toString();
    createdAt = json['created_at']?.toString();
    updatedAt = json['updated_at']?.toString();
    blurHash = json['blur_hash']?.toString();
    urls = (json['urls'] != null)
        ? TopicsPreviewPhotosUrls.fromJson(json['urls'])
        : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['slug'] = slug;
    data['created_at'] = createdAt;
    data['updated_at'] = updatedAt;
    data['blur_hash'] = blurHash;
    if (urls != null) {
      data['urls'] = urls!.toJson();
    }
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}

class TopicsCoverPhotoUserSocial {
/*
{
  "instagram_username": "sleepless_explorer",
  "portfolio_url": "null",
  "twitter_username": "null",
  "paypal_email": "null"
} 
*/

  String? instagramUsername;
  String? portfolioUrl;
  String? twitterUsername;
  String? paypalEmail;
  Map<String, dynamic> __origJson = {};

  TopicsCoverPhotoUserSocial({
    this.instagramUsername,
    this.portfolioUrl,
    this.twitterUsername,
    this.paypalEmail,
  });
  TopicsCoverPhotoUserSocial.fromJson(Map<String, dynamic> json) {
    __origJson = json;
    instagramUsername = json['instagram_username']?.toString();
    portfolioUrl = json['portfolio_url']?.toString();
    twitterUsername = json['twitter_username']?.toString();
    paypalEmail = json['paypal_email']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['instagram_username'] = instagramUsername;
    data['portfolio_url'] = portfolioUrl;
    data['twitter_username'] = twitterUsername;
    data['paypal_email'] = paypalEmail;
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}

class TopicsCoverPhotoUserProfileImage {
/*
{
  "small": "https://images.unsplash.com/profile-1678951026816-ae642fbaebb3image?ixlib=rb-4.0.3&crop=faces&fit=crop&w=32&h=32",
  "medium": "https://images.unsplash.com/profile-1678951026816-ae642fbaebb3image?ixlib=rb-4.0.3&crop=faces&fit=crop&w=64&h=64",
  "large": "https://images.unsplash.com/profile-1678951026816-ae642fbaebb3image?ixlib=rb-4.0.3&crop=faces&fit=crop&w=128&h=128"
} 
*/

  String? small;
  String? medium;
  String? large;
  Map<String, dynamic> __origJson = {};

  TopicsCoverPhotoUserProfileImage({
    this.small,
    this.medium,
    this.large,
  });
  TopicsCoverPhotoUserProfileImage.fromJson(Map<String, dynamic> json) {
    __origJson = json;
    small = json['small']?.toString();
    medium = json['medium']?.toString();
    large = json['large']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['small'] = small;
    data['medium'] = medium;
    data['large'] = large;
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}

class TopicsCoverPhotoUserLinks {
/*
{
  "self": "https://api.unsplash.com/users/sleepless_explorer",
  "html": "https://unsplash.com/@sleepless_explorer",
  "photos": "https://api.unsplash.com/users/sleepless_explorer/photos",
  "likes": "https://api.unsplash.com/users/sleepless_explorer/likes",
  "portfolio": "https://api.unsplash.com/users/sleepless_explorer/portfolio",
  "following": "https://api.unsplash.com/users/sleepless_explorer/following",
  "followers": "https://api.unsplash.com/users/sleepless_explorer/followers"
} 
*/

  String? self;
  String? html;
  String? photos;
  String? likes;
  String? portfolio;
  String? following;
  String? followers;
  Map<String, dynamic> __origJson = {};

  TopicsCoverPhotoUserLinks({
    this.self,
    this.html,
    this.photos,
    this.likes,
    this.portfolio,
    this.following,
    this.followers,
  });
  TopicsCoverPhotoUserLinks.fromJson(Map<String, dynamic> json) {
    __origJson = json;
    self = json['self']?.toString();
    html = json['html']?.toString();
    photos = json['photos']?.toString();
    likes = json['likes']?.toString();
    portfolio = json['portfolio']?.toString();
    following = json['following']?.toString();
    followers = json['followers']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['self'] = self;
    data['html'] = html;
    data['photos'] = photos;
    data['likes'] = likes;
    data['portfolio'] = portfolio;
    data['following'] = following;
    data['followers'] = followers;
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}

class TopicsCoverPhotoUser {
/*
{
  "id": "ToLFydjoCLo",
  "updated_at": "2023-05-06T10:15:01Z",
  "username": "sleepless_explorer",
  "name": "Kush Dwivedi",
  "first_name": "Kush",
  "last_name": "Dwivedi",
  "twitter_username": "null",
  "portfolio_url": "null",
  "bio": "\"Sic Parvis Magna\"",
  "location": "Seattle, Washington",
  "links": {
    "self": "https://api.unsplash.com/users/sleepless_explorer",
    "html": "https://unsplash.com/@sleepless_explorer",
    "photos": "https://api.unsplash.com/users/sleepless_explorer/photos",
    "likes": "https://api.unsplash.com/users/sleepless_explorer/likes",
    "portfolio": "https://api.unsplash.com/users/sleepless_explorer/portfolio",
    "following": "https://api.unsplash.com/users/sleepless_explorer/following",
    "followers": "https://api.unsplash.com/users/sleepless_explorer/followers"
  },
  "profile_image": {
    "small": "https://images.unsplash.com/profile-1678951026816-ae642fbaebb3image?ixlib=rb-4.0.3&crop=faces&fit=crop&w=32&h=32",
    "medium": "https://images.unsplash.com/profile-1678951026816-ae642fbaebb3image?ixlib=rb-4.0.3&crop=faces&fit=crop&w=64&h=64",
    "large": "https://images.unsplash.com/profile-1678951026816-ae642fbaebb3image?ixlib=rb-4.0.3&crop=faces&fit=crop&w=128&h=128"
  },
  "instagram_username": "sleepless_explorer",
  "total_collections": 0,
  "total_likes": 2,
  "total_photos": 20,
  "accepted_tos": true,
  "for_hire": true,
  "social": {
    "instagram_username": "sleepless_explorer",
    "portfolio_url": "null",
    "twitter_username": "null",
    "paypal_email": "null"
  }
} 
*/

  String? id;
  String? updatedAt;
  String? username;
  String? name;
  String? firstName;
  String? lastName;
  String? twitterUsername;
  String? portfolioUrl;
  String? bio;
  String? location;
  TopicsCoverPhotoUserLinks? links;
  TopicsCoverPhotoUserProfileImage? profileImage;
  String? instagramUsername;
  int? totalCollections;
  int? totalLikes;
  int? totalPhotos;
  bool? acceptedTos;
  bool? forHire;
  TopicsCoverPhotoUserSocial? social;
  Map<String, dynamic> __origJson = {};

  TopicsCoverPhotoUser({
    this.id,
    this.updatedAt,
    this.username,
    this.name,
    this.firstName,
    this.lastName,
    this.twitterUsername,
    this.portfolioUrl,
    this.bio,
    this.location,
    this.links,
    this.profileImage,
    this.instagramUsername,
    this.totalCollections,
    this.totalLikes,
    this.totalPhotos,
    this.acceptedTos,
    this.forHire,
    this.social,
  });
  TopicsCoverPhotoUser.fromJson(Map<String, dynamic> json) {
    __origJson = json;
    id = json['id']?.toString();
    updatedAt = json['updated_at']?.toString();
    username = json['username']?.toString();
    name = json['name']?.toString();
    firstName = json['first_name']?.toString();
    lastName = json['last_name']?.toString();
    twitterUsername = json['twitter_username']?.toString();
    portfolioUrl = json['portfolio_url']?.toString();
    bio = json['bio']?.toString();
    location = json['location']?.toString();
    links = (json['links'] != null)
        ? TopicsCoverPhotoUserLinks.fromJson(json['links'])
        : null;
    profileImage = (json['profile_image'] != null)
        ? TopicsCoverPhotoUserProfileImage.fromJson(json['profile_image'])
        : null;
    instagramUsername = json['instagram_username']?.toString();
    totalCollections = json['total_collections']?.toInt();
    totalLikes = json['total_likes']?.toInt();
    totalPhotos = json['total_photos']?.toInt();
    acceptedTos = json['accepted_tos'];
    forHire = json['for_hire'];
    social = (json['social'] != null)
        ? TopicsCoverPhotoUserSocial.fromJson(json['social'])
        : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['updated_at'] = updatedAt;
    data['username'] = username;
    data['name'] = name;
    data['first_name'] = firstName;
    data['last_name'] = lastName;
    data['twitter_username'] = twitterUsername;
    data['portfolio_url'] = portfolioUrl;
    data['bio'] = bio;
    data['location'] = location;
    if (links != null) {
      data['links'] = links!.toJson();
    }
    if (profileImage != null) {
      data['profile_image'] = profileImage!.toJson();
    }
    data['instagram_username'] = instagramUsername;
    data['total_collections'] = totalCollections;
    data['total_likes'] = totalLikes;
    data['total_photos'] = totalPhotos;
    data['accepted_tos'] = acceptedTos;
    data['for_hire'] = forHire;
    if (social != null) {
      data['social'] = social!.toJson();
    }
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}

class TopicsCoverPhotoTopicSubmissionsGreenerCities {
/*
{
  "status": "approved",
  "approved_on": "2023-05-04T11:45:07Z"
} 
*/

  String? status;
  String? approvedOn;
  Map<String, dynamic> __origJson = {};

  TopicsCoverPhotoTopicSubmissionsGreenerCities({
    this.status,
    this.approvedOn,
  });
  TopicsCoverPhotoTopicSubmissionsGreenerCities.fromJson(
      Map<String, dynamic> json) {
    __origJson = json;
    status = json['status']?.toString();
    approvedOn = json['approved_on']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['status'] = status;
    data['approved_on'] = approvedOn;
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}

class TopicsCoverPhotoTopicSubmissionsStreetPhotography {
/*
{
  "status": "rejected"
} 
*/

  String? status;
  Map<String, dynamic> __origJson = {};

  TopicsCoverPhotoTopicSubmissionsStreetPhotography({
    this.status,
  });
  TopicsCoverPhotoTopicSubmissionsStreetPhotography.fromJson(
      Map<String, dynamic> json) {
    __origJson = json;
    status = json['status']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['status'] = status;
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}

class TopicsCoverPhotoTopicSubmissionsTravel {
/*
{
  "status": "rejected"
} 
*/

  String? status;
  Map<String, dynamic> __origJson = {};

  TopicsCoverPhotoTopicSubmissionsTravel({
    this.status,
  });
  TopicsCoverPhotoTopicSubmissionsTravel.fromJson(Map<String, dynamic> json) {
    __origJson = json;
    status = json['status']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['status'] = status;
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}

class TopicsCoverPhotoTopicSubmissionsWallpapers {
/*
{
  "status": "rejected"
} 
*/

  String? status;
  Map<String, dynamic> __origJson = {};

  TopicsCoverPhotoTopicSubmissionsWallpapers({
    this.status,
  });
  TopicsCoverPhotoTopicSubmissionsWallpapers.fromJson(
      Map<String, dynamic> json) {
    __origJson = json;
    status = json['status']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['status'] = status;
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}

class TopicsCoverPhotoTopicSubmissionsNature {
/*
{
  "status": "rejected"
} 
*/

  String? status;
  Map<String, dynamic> __origJson = {};

  TopicsCoverPhotoTopicSubmissionsNature({
    this.status,
  });
  TopicsCoverPhotoTopicSubmissionsNature.fromJson(Map<String, dynamic> json) {
    __origJson = json;
    status = json['status']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['status'] = status;
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}

class TopicsCoverPhotoTopicSubmissionsArchitectureInterior {
/*
{
  "status": "rejected"
} 
*/

  String? status;
  Map<String, dynamic> __origJson = {};

  TopicsCoverPhotoTopicSubmissionsArchitectureInterior({
    this.status,
  });
  TopicsCoverPhotoTopicSubmissionsArchitectureInterior.fromJson(
      Map<String, dynamic> json) {
    __origJson = json;
    status = json['status']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['status'] = status;
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}

class TopicsCoverPhotoTopicSubmissions {
/*
{
  "architecture-interior": {
    "status": "rejected"
  },
  "nature": {
    "status": "rejected"
  },
  "wallpapers": {
    "status": "rejected"
  },
  "travel": {
    "status": "rejected"
  },
  "street-photography": {
    "status": "rejected"
  },
  "greener-cities": {
    "status": "approved",
    "approved_on": "2023-05-04T11:45:07Z"
  }
} 
*/

  TopicsCoverPhotoTopicSubmissionsArchitectureInterior? architectureInterior;
  TopicsCoverPhotoTopicSubmissionsNature? nature;
  TopicsCoverPhotoTopicSubmissionsWallpapers? wallpapers;
  TopicsCoverPhotoTopicSubmissionsTravel? travel;
  TopicsCoverPhotoTopicSubmissionsStreetPhotography? streetPhotography;
  TopicsCoverPhotoTopicSubmissionsGreenerCities? greenerCities;
  Map<String, dynamic> __origJson = {};

  TopicsCoverPhotoTopicSubmissions({
    this.architectureInterior,
    this.nature,
    this.wallpapers,
    this.travel,
    this.streetPhotography,
    this.greenerCities,
  });
  TopicsCoverPhotoTopicSubmissions.fromJson(Map<String, dynamic> json) {
    __origJson = json;
    architectureInterior = (json['architecture-interior'] != null)
        ? TopicsCoverPhotoTopicSubmissionsArchitectureInterior.fromJson(
            json['architecture-interior'])
        : null;
    nature = (json['nature'] != null)
        ? TopicsCoverPhotoTopicSubmissionsNature.fromJson(json['nature'])
        : null;
    wallpapers = (json['wallpapers'] != null)
        ? TopicsCoverPhotoTopicSubmissionsWallpapers.fromJson(
            json['wallpapers'])
        : null;
    travel = (json['travel'] != null)
        ? TopicsCoverPhotoTopicSubmissionsTravel.fromJson(json['travel'])
        : null;
    streetPhotography = (json['street-photography'] != null)
        ? TopicsCoverPhotoTopicSubmissionsStreetPhotography.fromJson(
            json['street-photography'])
        : null;
    greenerCities = (json['greener-cities'] != null)
        ? TopicsCoverPhotoTopicSubmissionsGreenerCities.fromJson(
            json['greener-cities'])
        : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (architectureInterior != null) {
      data['architecture-interior'] = architectureInterior!.toJson();
    }
    if (nature != null) {
      data['nature'] = nature!.toJson();
    }
    if (wallpapers != null) {
      data['wallpapers'] = wallpapers!.toJson();
    }
    if (travel != null) {
      data['travel'] = travel!.toJson();
    }
    if (streetPhotography != null) {
      data['street-photography'] = streetPhotography!.toJson();
    }
    if (greenerCities != null) {
      data['greener-cities'] = greenerCities!.toJson();
    }
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}

class TopicsCoverPhotoLinks {
/*
{
  "self": "https://api.unsplash.com/photos/1_k5t7KUKBY",
  "html": "https://unsplash.com/photos/1_k5t7KUKBY",
  "download": "https://unsplash.com/photos/1_k5t7KUKBY/download",
  "download_location": "https://api.unsplash.com/photos/1_k5t7KUKBY/download"
} 
*/

  String? self;
  String? html;
  String? download;
  String? downloadLocation;
  Map<String, dynamic> __origJson = {};

  TopicsCoverPhotoLinks({
    this.self,
    this.html,
    this.download,
    this.downloadLocation,
  });
  TopicsCoverPhotoLinks.fromJson(Map<String, dynamic> json) {
    __origJson = json;
    self = json['self']?.toString();
    html = json['html']?.toString();
    download = json['download']?.toString();
    downloadLocation = json['download_location']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['self'] = self;
    data['html'] = html;
    data['download'] = download;
    data['download_location'] = downloadLocation;
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}

class TopicsCoverPhotoUrls {
/*
{
  "raw": "https://images.unsplash.com/photo-1681355296680-30dd86fd0174?ixlib=rb-4.0.3",
  "full": "https://images.unsplash.com/photo-1681355296680-30dd86fd0174?ixlib=rb-4.0.3&q=85&fm=jpg&crop=entropy&cs=srgb",
  "regular": "https://images.unsplash.com/photo-1681355296680-30dd86fd0174?ixlib=rb-4.0.3&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max",
  "small": "https://images.unsplash.com/photo-1681355296680-30dd86fd0174?ixlib=rb-4.0.3&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=400&fit=max",
  "thumb": "https://images.unsplash.com/photo-1681355296680-30dd86fd0174?ixlib=rb-4.0.3&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=200&fit=max",
  "small_s3": "https://s3.us-west-2.amazonaws.com/images.unsplash.com/small/photo-1681355296680-30dd86fd0174"
} 
*/

  String? raw;
  String? full;
  String? regular;
  String? small;
  String? thumb;
  String? smallS3;
  Map<String, dynamic> __origJson = {};

  TopicsCoverPhotoUrls({
    this.raw,
    this.full,
    this.regular,
    this.small,
    this.thumb,
    this.smallS3,
  });
  TopicsCoverPhotoUrls.fromJson(Map<String, dynamic> json) {
    __origJson = json;
    raw = json['raw']?.toString();
    full = json['full']?.toString();
    regular = json['regular']?.toString();
    small = json['small']?.toString();
    thumb = json['thumb']?.toString();
    smallS3 = json['small_s3']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['raw'] = raw;
    data['full'] = full;
    data['regular'] = regular;
    data['small'] = small;
    data['thumb'] = thumb;
    data['small_s3'] = smallS3;
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}

class TopicsCoverPhoto {
/*
{
  "id": "1_k5t7KUKBY",
  "slug": "1_k5t7KUKBY",
  "created_at": "2023-04-13T03:10:26Z",
  "updated_at": "2023-05-06T08:37:08Z",
  "promoted_at": "null",
  "width": 5864,
  "height": 3909,
  "color": "#260c0c",
  "blur_hash": "LCB37@0eV{=zHD+aShOs?cIoW-tl",
  "description": "\" A house among apartments\"",
  "alt_description": "a tall brick building covered in ivy",
  "urls": {
    "raw": "https://images.unsplash.com/photo-1681355296680-30dd86fd0174?ixlib=rb-4.0.3",
    "full": "https://images.unsplash.com/photo-1681355296680-30dd86fd0174?ixlib=rb-4.0.3&q=85&fm=jpg&crop=entropy&cs=srgb",
    "regular": "https://images.unsplash.com/photo-1681355296680-30dd86fd0174?ixlib=rb-4.0.3&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max",
    "small": "https://images.unsplash.com/photo-1681355296680-30dd86fd0174?ixlib=rb-4.0.3&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=400&fit=max",
    "thumb": "https://images.unsplash.com/photo-1681355296680-30dd86fd0174?ixlib=rb-4.0.3&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=200&fit=max",
    "small_s3": "https://s3.us-west-2.amazonaws.com/images.unsplash.com/small/photo-1681355296680-30dd86fd0174"
  },
  "links": {
    "self": "https://api.unsplash.com/photos/1_k5t7KUKBY",
    "html": "https://unsplash.com/photos/1_k5t7KUKBY",
    "download": "https://unsplash.com/photos/1_k5t7KUKBY/download",
    "download_location": "https://api.unsplash.com/photos/1_k5t7KUKBY/download"
  },
  "likes": 20,
  "liked_by_user": false,
  "current_user_collections": [
    ""
  ],
  "sponsorship": "null",
  "topic_submissions": {
    "architecture-interior": {
      "status": "rejected"
    },
    "nature": {
      "status": "rejected"
    },
    "wallpapers": {
      "status": "rejected"
    },
    "travel": {
      "status": "rejected"
    },
    "street-photography": {
      "status": "rejected"
    },
    "greener-cities": {
      "status": "approved",
      "approved_on": "2023-05-04T11:45:07Z"
    }
  },
  "user": {
    "id": "ToLFydjoCLo",
    "updated_at": "2023-05-06T10:15:01Z",
    "username": "sleepless_explorer",
    "name": "Kush Dwivedi",
    "first_name": "Kush",
    "last_name": "Dwivedi",
    "twitter_username": "null",
    "portfolio_url": "null",
    "bio": "\"Sic Parvis Magna\"",
    "location": "Seattle, Washington",
    "links": {
      "self": "https://api.unsplash.com/users/sleepless_explorer",
      "html": "https://unsplash.com/@sleepless_explorer",
      "photos": "https://api.unsplash.com/users/sleepless_explorer/photos",
      "likes": "https://api.unsplash.com/users/sleepless_explorer/likes",
      "portfolio": "https://api.unsplash.com/users/sleepless_explorer/portfolio",
      "following": "https://api.unsplash.com/users/sleepless_explorer/following",
      "followers": "https://api.unsplash.com/users/sleepless_explorer/followers"
    },
    "profile_image": {
      "small": "https://images.unsplash.com/profile-1678951026816-ae642fbaebb3image?ixlib=rb-4.0.3&crop=faces&fit=crop&w=32&h=32",
      "medium": "https://images.unsplash.com/profile-1678951026816-ae642fbaebb3image?ixlib=rb-4.0.3&crop=faces&fit=crop&w=64&h=64",
      "large": "https://images.unsplash.com/profile-1678951026816-ae642fbaebb3image?ixlib=rb-4.0.3&crop=faces&fit=crop&w=128&h=128"
    },
    "instagram_username": "sleepless_explorer",
    "total_collections": 0,
    "total_likes": 2,
    "total_photos": 20,
    "accepted_tos": true,
    "for_hire": true,
    "social": {
      "instagram_username": "sleepless_explorer",
      "portfolio_url": "null",
      "twitter_username": "null",
      "paypal_email": "null"
    }
  }
} 
*/

  String? id;
  String? slug;
  String? createdAt;
  String? updatedAt;
  String? promotedAt;
  int? width;
  int? height;
  String? color;
  String? blurHash;
  String? description;
  String? altDescription;
  TopicsCoverPhotoUrls? urls;
  TopicsCoverPhotoLinks? links;
  int? likes;
  bool? likedByUser;
  List<String?>? currentUserCollections;
  String? sponsorship;
  TopicsCoverPhotoTopicSubmissions? topicSubmissions;
  TopicsCoverPhotoUser? user;
  Map<String, dynamic> __origJson = {};

  TopicsCoverPhoto({
    this.id,
    this.slug,
    this.createdAt,
    this.updatedAt,
    this.promotedAt,
    this.width,
    this.height,
    this.color,
    this.blurHash,
    this.description,
    this.altDescription,
    this.urls,
    this.links,
    this.likes,
    this.likedByUser,
    this.currentUserCollections,
    this.sponsorship,
    this.topicSubmissions,
    this.user,
  });
  TopicsCoverPhoto.fromJson(Map<String, dynamic> json) {
    __origJson = json;
    id = json['id']?.toString();
    slug = json['slug']?.toString();
    createdAt = json['created_at']?.toString();
    updatedAt = json['updated_at']?.toString();
    promotedAt = json['promoted_at']?.toString();
    width = json['width']?.toInt();
    height = json['height']?.toInt();
    color = json['color']?.toString();
    blurHash = json['blur_hash']?.toString();
    description = json['description']?.toString();
    altDescription = json['alt_description']?.toString();
    urls = (json['urls'] != null)
        ? TopicsCoverPhotoUrls.fromJson(json['urls'])
        : null;
    links = (json['links'] != null)
        ? TopicsCoverPhotoLinks.fromJson(json['links'])
        : null;
    likes = json['likes']?.toInt();
    likedByUser = json['liked_by_user'];
    if (json['current_user_collections'] != null) {
      final v = json['current_user_collections'];
      final arr0 = <String>[];
      v.forEach((v) {
        arr0.add(v.toString());
      });
      currentUserCollections = arr0;
    }
    sponsorship = json['sponsorship']?.toString();
    topicSubmissions = (json['topic_submissions'] != null)
        ? TopicsCoverPhotoTopicSubmissions.fromJson(json['topic_submissions'])
        : null;
    user = (json['user'] != null)
        ? TopicsCoverPhotoUser.fromJson(json['user'])
        : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['slug'] = slug;
    data['created_at'] = createdAt;
    data['updated_at'] = updatedAt;
    data['promoted_at'] = promotedAt;
    data['width'] = width;
    data['height'] = height;
    data['color'] = color;
    data['blur_hash'] = blurHash;
    data['description'] = description;
    data['alt_description'] = altDescription;
    if (urls != null) {
      data['urls'] = urls!.toJson();
    }
    if (links != null) {
      data['links'] = links!.toJson();
    }
    data['likes'] = likes;
    data['liked_by_user'] = likedByUser;
    if (currentUserCollections != null) {
      final v = currentUserCollections;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['current_user_collections'] = arr0;
    }
    data['sponsorship'] = sponsorship;
    if (topicSubmissions != null) {
      data['topic_submissions'] = topicSubmissions!.toJson();
    }
    if (user != null) {
      data['user'] = user!.toJson();
    }
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}

class TopicsOwnersSocial {
/*
{
  "instagram_username": "boxedwater",
  "portfolio_url": "https://boxedwaterisbetter.com/?utm_source=brand-referral&utm_medium=unsplash&utm_campaign=stigmatize-plastic",
  "twitter_username": "boxedwater",
  "paypal_email": "null"
} 
*/

  String? instagramUsername;
  String? portfolioUrl;
  String? twitterUsername;
  String? paypalEmail;
  Map<String, dynamic> __origJson = {};

  TopicsOwnersSocial({
    this.instagramUsername,
    this.portfolioUrl,
    this.twitterUsername,
    this.paypalEmail,
  });
  TopicsOwnersSocial.fromJson(Map<String, dynamic> json) {
    __origJson = json;
    instagramUsername = json['instagram_username']?.toString();
    portfolioUrl = json['portfolio_url']?.toString();
    twitterUsername = json['twitter_username']?.toString();
    paypalEmail = json['paypal_email']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['instagram_username'] = instagramUsername;
    data['portfolio_url'] = portfolioUrl;
    data['twitter_username'] = twitterUsername;
    data['paypal_email'] = paypalEmail;
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}

class TopicsOwnersProfileImage {
/*
{
  "small": "https://images.unsplash.com/profile-1557251674406-effb9d313841?ixlib=rb-4.0.3&crop=faces&fit=crop&w=32&h=32",
  "medium": "https://images.unsplash.com/profile-1557251674406-effb9d313841?ixlib=rb-4.0.3&crop=faces&fit=crop&w=64&h=64",
  "large": "https://images.unsplash.com/profile-1557251674406-effb9d313841?ixlib=rb-4.0.3&crop=faces&fit=crop&w=128&h=128"
} 
*/

  String? small;
  String? medium;
  String? large;
  Map<String, dynamic> __origJson = {};

  TopicsOwnersProfileImage({
    this.small,
    this.medium,
    this.large,
  });
  TopicsOwnersProfileImage.fromJson(Map<String, dynamic> json) {
    __origJson = json;
    small = json['small']?.toString();
    medium = json['medium']?.toString();
    large = json['large']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['small'] = small;
    data['medium'] = medium;
    data['large'] = large;
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}

class TopicsOwnersLinks {
/*
{
  "self": "https://api.unsplash.com/users/boxedwater",
  "html": "https://unsplash.com/@boxedwater",
  "photos": "https://api.unsplash.com/users/boxedwater/photos",
  "likes": "https://api.unsplash.com/users/boxedwater/likes",
  "portfolio": "https://api.unsplash.com/users/boxedwater/portfolio",
  "following": "https://api.unsplash.com/users/boxedwater/following",
  "followers": "https://api.unsplash.com/users/boxedwater/followers"
} 
*/

  String? self;
  String? html;
  String? photos;
  String? likes;
  String? portfolio;
  String? following;
  String? followers;
  Map<String, dynamic> __origJson = {};

  TopicsOwnersLinks({
    this.self,
    this.html,
    this.photos,
    this.likes,
    this.portfolio,
    this.following,
    this.followers,
  });
  TopicsOwnersLinks.fromJson(Map<String, dynamic> json) {
    __origJson = json;
    self = json['self']?.toString();
    html = json['html']?.toString();
    photos = json['photos']?.toString();
    likes = json['likes']?.toString();
    portfolio = json['portfolio']?.toString();
    following = json['following']?.toString();
    followers = json['followers']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['self'] = self;
    data['html'] = html;
    data['photos'] = photos;
    data['likes'] = likes;
    data['portfolio'] = portfolio;
    data['following'] = following;
    data['followers'] = followers;
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}

class TopicsOwners {
/*
{
  "id": "8Ae1yJe8OoA",
  "updated_at": "2023-05-04T03:26:58Z",
  "username": "boxedwater",
  "name": "Boxed Water Is Better",
  "first_name": "Boxed Water Is Better",
  "last_name": "null",
  "twitter_username": "boxedwater",
  "portfolio_url": "https://boxedwaterisbetter.com/?utm_source=brand-referral&utm_medium=unsplash&utm_campaign=stigmatize-plastic",
  "bio": "👋  We're a sustainable alternative to plastic water bottles.\r\n🚫  Ditch plastic bottles  🌲  Plant trees with us using #BetterPlanet Boxed Water is 100% pure, 92% sustainably packaged & 100%  recyclable. Let’s build a #BetterPlanet together. ",
  "location": "Holland, MI",
  "links": {
    "self": "https://api.unsplash.com/users/boxedwater",
    "html": "https://unsplash.com/@boxedwater",
    "photos": "https://api.unsplash.com/users/boxedwater/photos",
    "likes": "https://api.unsplash.com/users/boxedwater/likes",
    "portfolio": "https://api.unsplash.com/users/boxedwater/portfolio",
    "following": "https://api.unsplash.com/users/boxedwater/following",
    "followers": "https://api.unsplash.com/users/boxedwater/followers"
  },
  "profile_image": {
    "small": "https://images.unsplash.com/profile-1557251674406-effb9d313841?ixlib=rb-4.0.3&crop=faces&fit=crop&w=32&h=32",
    "medium": "https://images.unsplash.com/profile-1557251674406-effb9d313841?ixlib=rb-4.0.3&crop=faces&fit=crop&w=64&h=64",
    "large": "https://images.unsplash.com/profile-1557251674406-effb9d313841?ixlib=rb-4.0.3&crop=faces&fit=crop&w=128&h=128"
  },
  "instagram_username": "boxedwater",
  "total_collections": 2,
  "total_likes": 3,
  "total_photos": 240,
  "accepted_tos": true,
  "for_hire": false,
  "social": {
    "instagram_username": "boxedwater",
    "portfolio_url": "https://boxedwaterisbetter.com/?utm_source=brand-referral&utm_medium=unsplash&utm_campaign=stigmatize-plastic",
    "twitter_username": "boxedwater",
    "paypal_email": "null"
  }
} 
*/

  String? id;
  String? updatedAt;
  String? username;
  String? name;
  String? firstName;
  String? lastName;
  String? twitterUsername;
  String? portfolioUrl;
  String? bio;
  String? location;
  TopicsOwnersLinks? links;
  TopicsOwnersProfileImage? profileImage;
  String? instagramUsername;
  int? totalCollections;
  int? totalLikes;
  int? totalPhotos;
  bool? acceptedTos;
  bool? forHire;
  TopicsOwnersSocial? social;
  Map<String, dynamic> __origJson = {};

  TopicsOwners({
    this.id,
    this.updatedAt,
    this.username,
    this.name,
    this.firstName,
    this.lastName,
    this.twitterUsername,
    this.portfolioUrl,
    this.bio,
    this.location,
    this.links,
    this.profileImage,
    this.instagramUsername,
    this.totalCollections,
    this.totalLikes,
    this.totalPhotos,
    this.acceptedTos,
    this.forHire,
    this.social,
  });
  TopicsOwners.fromJson(Map<String, dynamic> json) {
    __origJson = json;
    id = json['id']?.toString();
    updatedAt = json['updated_at']?.toString();
    username = json['username']?.toString();
    name = json['name']?.toString();
    firstName = json['first_name']?.toString();
    lastName = json['last_name']?.toString();
    twitterUsername = json['twitter_username']?.toString();
    portfolioUrl = json['portfolio_url']?.toString();
    bio = json['bio']?.toString();
    location = json['location']?.toString();
    links = (json['links'] != null)
        ? TopicsOwnersLinks.fromJson(json['links'])
        : null;
    profileImage = (json['profile_image'] != null)
        ? TopicsOwnersProfileImage.fromJson(json['profile_image'])
        : null;
    instagramUsername = json['instagram_username']?.toString();
    totalCollections = json['total_collections']?.toInt();
    totalLikes = json['total_likes']?.toInt();
    totalPhotos = json['total_photos']?.toInt();
    acceptedTos = json['accepted_tos'];
    forHire = json['for_hire'];
    social = (json['social'] != null)
        ? TopicsOwnersSocial.fromJson(json['social'])
        : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['updated_at'] = updatedAt;
    data['username'] = username;
    data['name'] = name;
    data['first_name'] = firstName;
    data['last_name'] = lastName;
    data['twitter_username'] = twitterUsername;
    data['portfolio_url'] = portfolioUrl;
    data['bio'] = bio;
    data['location'] = location;
    if (links != null) {
      data['links'] = links!.toJson();
    }
    if (profileImage != null) {
      data['profile_image'] = profileImage!.toJson();
    }
    data['instagram_username'] = instagramUsername;
    data['total_collections'] = totalCollections;
    data['total_likes'] = totalLikes;
    data['total_photos'] = totalPhotos;
    data['accepted_tos'] = acceptedTos;
    data['for_hire'] = forHire;
    if (social != null) {
      data['social'] = social!.toJson();
    }
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}

class TopicsLinks {
/*
{
  "self": "https://api.unsplash.com/topics/greener-cities",
  "html": "https://unsplash.com/t/greener-cities",
  "photos": "https://api.unsplash.com/topics/greener-cities/photos"
} 
*/

  String? self;
  String? html;
  String? photos;
  Map<String, dynamic> __origJson = {};

  TopicsLinks({
    this.self,
    this.html,
    this.photos,
  });
  TopicsLinks.fromJson(Map<String, dynamic> json) {
    __origJson = json;
    self = json['self']?.toString();
    html = json['html']?.toString();
    photos = json['photos']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['self'] = self;
    data['html'] = html;
    data['photos'] = photos;
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}

class Topics {
/*
{
  "id": "Mr49Evh5Sks",
  "slug": "greener-cities",
  "title": "Greener Cities",
  "description": "We teamed up with One Tree Planted, and their Urban Forestry Action Fund, to spread the word of the importance of green in our cities on our planet and our health. Submit an image of trees and plants in urban areas — from rooftop forests to trees along sidewalks. \r\n\r\n<p>Learn more <a href=\"https://unsplash.com/blog/greener-cities/\">here</a>. </p>\r\n\r\n<p>Sponsored by Boxed Water™</p>",
  "published_at": "2023-04-28T18:24:22Z",
  "updated_at": "2023-05-04T11:45:07Z",
  "starts_at": "2023-04-29T00:00:00Z",
  "ends_at": "2023-05-29T23:59:59Z",
  "only_submissions_after": "null",
  "visibility": "featured",
  "featured": true,
  "total_photos": 106,
  "current_user_contributions": [
    ""
  ],
  "total_current_user_submissions": {},
  "links": {
    "self": "https://api.unsplash.com/topics/greener-cities",
    "html": "https://unsplash.com/t/greener-cities",
    "photos": "https://api.unsplash.com/topics/greener-cities/photos"
  },
  "status": "open",
  "owners": [
    {
      "id": "8Ae1yJe8OoA",
      "updated_at": "2023-05-04T03:26:58Z",
      "username": "boxedwater",
      "name": "Boxed Water Is Better",
      "first_name": "Boxed Water Is Better",
      "last_name": "null",
      "twitter_username": "boxedwater",
      "portfolio_url": "https://boxedwaterisbetter.com/?utm_source=brand-referral&utm_medium=unsplash&utm_campaign=stigmatize-plastic",
      "bio": "👋  We're a sustainable alternative to plastic water bottles.\r\n🚫  Ditch plastic bottles  🌲  Plant trees with us using #BetterPlanet Boxed Water is 100% pure, 92% sustainably packaged & 100%  recyclable. Let’s build a #BetterPlanet together. ",
      "location": "Holland, MI",
      "links": {
        "self": "https://api.unsplash.com/users/boxedwater",
        "html": "https://unsplash.com/@boxedwater",
        "photos": "https://api.unsplash.com/users/boxedwater/photos",
        "likes": "https://api.unsplash.com/users/boxedwater/likes",
        "portfolio": "https://api.unsplash.com/users/boxedwater/portfolio",
        "following": "https://api.unsplash.com/users/boxedwater/following",
        "followers": "https://api.unsplash.com/users/boxedwater/followers"
      },
      "profile_image": {
        "small": "https://images.unsplash.com/profile-1557251674406-effb9d313841?ixlib=rb-4.0.3&crop=faces&fit=crop&w=32&h=32",
        "medium": "https://images.unsplash.com/profile-1557251674406-effb9d313841?ixlib=rb-4.0.3&crop=faces&fit=crop&w=64&h=64",
        "large": "https://images.unsplash.com/profile-1557251674406-effb9d313841?ixlib=rb-4.0.3&crop=faces&fit=crop&w=128&h=128"
      },
      "instagram_username": "boxedwater",
      "total_collections": 2,
      "total_likes": 3,
      "total_photos": 240,
      "accepted_tos": true,
      "for_hire": false,
      "social": {
        "instagram_username": "boxedwater",
        "portfolio_url": "https://boxedwaterisbetter.com/?utm_source=brand-referral&utm_medium=unsplash&utm_campaign=stigmatize-plastic",
        "twitter_username": "boxedwater",
        "paypal_email": "null"
      }
    }
  ],
  "cover_photo": {
    "id": "1_k5t7KUKBY",
    "slug": "1_k5t7KUKBY",
    "created_at": "2023-04-13T03:10:26Z",
    "updated_at": "2023-05-06T08:37:08Z",
    "promoted_at": "null",
    "width": 5864,
    "height": 3909,
    "color": "#260c0c",
    "blur_hash": "LCB37@0eV{=zHD+aShOs?cIoW-tl",
    "description": "\" A house among apartments\"",
    "alt_description": "a tall brick building covered in ivy",
    "urls": {
      "raw": "https://images.unsplash.com/photo-1681355296680-30dd86fd0174?ixlib=rb-4.0.3",
      "full": "https://images.unsplash.com/photo-1681355296680-30dd86fd0174?ixlib=rb-4.0.3&q=85&fm=jpg&crop=entropy&cs=srgb",
      "regular": "https://images.unsplash.com/photo-1681355296680-30dd86fd0174?ixlib=rb-4.0.3&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max",
      "small": "https://images.unsplash.com/photo-1681355296680-30dd86fd0174?ixlib=rb-4.0.3&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=400&fit=max",
      "thumb": "https://images.unsplash.com/photo-1681355296680-30dd86fd0174?ixlib=rb-4.0.3&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=200&fit=max",
      "small_s3": "https://s3.us-west-2.amazonaws.com/images.unsplash.com/small/photo-1681355296680-30dd86fd0174"
    },
    "links": {
      "self": "https://api.unsplash.com/photos/1_k5t7KUKBY",
      "html": "https://unsplash.com/photos/1_k5t7KUKBY",
      "download": "https://unsplash.com/photos/1_k5t7KUKBY/download",
      "download_location": "https://api.unsplash.com/photos/1_k5t7KUKBY/download"
    },
    "likes": 20,
    "liked_by_user": false,
    "current_user_collections": [
      ""
    ],
    "sponsorship": "null",
    "topic_submissions": {
      "architecture-interior": {
        "status": "rejected"
      },
      "nature": {
        "status": "rejected"
      },
      "wallpapers": {
        "status": "rejected"
      },
      "travel": {
        "status": "rejected"
      },
      "street-photography": {
        "status": "rejected"
      },
      "greener-cities": {
        "status": "approved",
        "approved_on": "2023-05-04T11:45:07Z"
      }
    },
    "user": {
      "id": "ToLFydjoCLo",
      "updated_at": "2023-05-06T10:15:01Z",
      "username": "sleepless_explorer",
      "name": "Kush Dwivedi",
      "first_name": "Kush",
      "last_name": "Dwivedi",
      "twitter_username": "null",
      "portfolio_url": "null",
      "bio": "\"Sic Parvis Magna\"",
      "location": "Seattle, Washington",
      "links": {
        "self": "https://api.unsplash.com/users/sleepless_explorer",
        "html": "https://unsplash.com/@sleepless_explorer",
        "photos": "https://api.unsplash.com/users/sleepless_explorer/photos",
        "likes": "https://api.unsplash.com/users/sleepless_explorer/likes",
        "portfolio": "https://api.unsplash.com/users/sleepless_explorer/portfolio",
        "following": "https://api.unsplash.com/users/sleepless_explorer/following",
        "followers": "https://api.unsplash.com/users/sleepless_explorer/followers"
      },
      "profile_image": {
        "small": "https://images.unsplash.com/profile-1678951026816-ae642fbaebb3image?ixlib=rb-4.0.3&crop=faces&fit=crop&w=32&h=32",
        "medium": "https://images.unsplash.com/profile-1678951026816-ae642fbaebb3image?ixlib=rb-4.0.3&crop=faces&fit=crop&w=64&h=64",
        "large": "https://images.unsplash.com/profile-1678951026816-ae642fbaebb3image?ixlib=rb-4.0.3&crop=faces&fit=crop&w=128&h=128"
      },
      "instagram_username": "sleepless_explorer",
      "total_collections": 0,
      "total_likes": 2,
      "total_photos": 20,
      "accepted_tos": true,
      "for_hire": true,
      "social": {
        "instagram_username": "sleepless_explorer",
        "portfolio_url": "null",
        "twitter_username": "null",
        "paypal_email": "null"
      }
    }
  },
  "preview_photos": [
    {
      "id": "1_k5t7KUKBY",
      "slug": "1_k5t7KUKBY",
      "created_at": "2023-04-13T03:10:26Z",
      "updated_at": "2023-05-06T08:37:08Z",
      "blur_hash": "LCB37@0eV{=zHD+aShOs?cIoW-tl",
      "urls": {
        "raw": "https://images.unsplash.com/photo-1681355296680-30dd86fd0174?ixlib=rb-4.0.3",
        "full": "https://images.unsplash.com/photo-1681355296680-30dd86fd0174?ixlib=rb-4.0.3&q=85&fm=jpg&crop=entropy&cs=srgb",
        "regular": "https://images.unsplash.com/photo-1681355296680-30dd86fd0174?ixlib=rb-4.0.3&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max",
        "small": "https://images.unsplash.com/photo-1681355296680-30dd86fd0174?ixlib=rb-4.0.3&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=400&fit=max",
        "thumb": "https://images.unsplash.com/photo-1681355296680-30dd86fd0174?ixlib=rb-4.0.3&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=200&fit=max",
        "small_s3": "https://s3.us-west-2.amazonaws.com/images.unsplash.com/small/photo-1681355296680-30dd86fd0174"
      }
    }
  ]
} 
*/

  String? id;
  String? slug;
  String? title;
  String? description;
  String? publishedAt;
  String? updatedAt;
  String? startsAt;
  String? endsAt;
  String? onlySubmissionsAfter;
  String? visibility;
  bool? featured;
  int? totalPhotos;
  List<String?>? currentUserContributions;
  TopicsLinks? links;
  String? status;
  List<TopicsOwners?>? owners;
  TopicsCoverPhoto? coverPhoto;
  List<TopicsPreviewPhotos?>? previewPhotos;
  Map<String, dynamic> __origJson = {};

  Topics({
    this.id,
    this.slug,
    this.title,
    this.description,
    this.publishedAt,
    this.updatedAt,
    this.startsAt,
    this.endsAt,
    this.onlySubmissionsAfter,
    this.visibility,
    this.featured,
    this.totalPhotos,
    this.currentUserContributions,
    this.links,
    this.status,
    this.owners,
    this.coverPhoto,
    this.previewPhotos,
  });
  Topics.fromJson(Map<String, dynamic> json) {
    __origJson = json;
    id = json['id']?.toString();
    slug = json['slug']?.toString();
    title = json['title']?.toString();
    description = json['description']?.toString();
    publishedAt = json['published_at']?.toString();
    updatedAt = json['updated_at']?.toString();
    startsAt = json['starts_at']?.toString();
    endsAt = json['ends_at']?.toString();
    onlySubmissionsAfter = json['only_submissions_after']?.toString();
    visibility = json['visibility']?.toString();
    featured = json['featured'];
    totalPhotos = json['total_photos']?.toInt();
    if (json['current_user_contributions'] != null) {
      final v = json['current_user_contributions'];
      final arr0 = <String>[];
      v.forEach((v) {
        arr0.add(v.toString());
      });
      currentUserContributions = arr0;
    }
    links =
        (json['links'] != null) ? TopicsLinks.fromJson(json['links']) : null;
    status = json['status']?.toString();
    if (json['owners'] != null) {
      final v = json['owners'];
      final arr0 = <TopicsOwners>[];
      v.forEach((v) {
        arr0.add(TopicsOwners.fromJson(v));
      });
      owners = arr0;
    }
    coverPhoto = (json['cover_photo'] != null)
        ? TopicsCoverPhoto.fromJson(json['cover_photo'])
        : null;
    if (json['preview_photos'] != null) {
      final v = json['preview_photos'];
      final arr0 = <TopicsPreviewPhotos>[];
      v.forEach((v) {
        arr0.add(TopicsPreviewPhotos.fromJson(v));
      });
      previewPhotos = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['slug'] = slug;
    data['title'] = title;
    data['description'] = description;
    data['published_at'] = publishedAt;
    data['updated_at'] = updatedAt;
    data['starts_at'] = startsAt;
    data['ends_at'] = endsAt;
    data['only_submissions_after'] = onlySubmissionsAfter;
    data['visibility'] = visibility;
    data['featured'] = featured;
    data['total_photos'] = totalPhotos;
    if (currentUserContributions != null) {
      final v = currentUserContributions;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['current_user_contributions'] = arr0;
    }
    if (links != null) {
      data['links'] = links!.toJson();
    }
    data['status'] = status;
    if (owners != null) {
      final v = owners;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['owners'] = arr0;
    }
    if (coverPhoto != null) {
      data['cover_photo'] = coverPhoto!.toJson();
    }
    if (previewPhotos != null) {
      final v = previewPhotos;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['preview_photos'] = arr0;
    }
    return data;
  }

  Map<String, dynamic> origJson() => __origJson;
}
